(this.webpackJsonp=this.webpackJsonp||[]).push([[113],{360:function(e,t,i){"use strict";!function(t){function i(e){return parseInt(e)===e}function r(e){if(!i(e.length))return!1;for(var t=0;t<e.length;t++)if(!i(e[t])||e[t]<0||e[t]>255)return!1;return!0}function s(e,t){if(e.buffer&&ArrayBuffer.isView(e)&&"Uint8Array"===e.name)return t&&(e=e.slice?e.slice():Array.prototype.slice.call(e)),e;if(Array.isArray(e)){if(!r(e))throw new Error("Array contains invalid value: "+e);return new Uint8Array(e)}if(i(e.length)&&r(e))return new Uint8Array(e);throw new Error("unsupported array-like object")}function n(e){return new Uint8Array(e)}function a(e,t,i,r,s){null==r&&null==s||(e=e.slice?e.slice(r,s):Array.prototype.slice.call(e,r,s)),t.set(e,i)}var o={toBytes:function(e){var t=[],i=0;for(e=encodeURI(e);i<e.length;){var r=e.charCodeAt(i++);37===r?(t.push(parseInt(e.substr(i,2),16)),i+=2):t.push(r)}return s(t)},fromBytes:function(e){for(var t=[],i=0;i<e.length;){var r=e[i];r<128?(t.push(String.fromCharCode(r)),i++):r>191&&r<224?(t.push(String.fromCharCode((31&r)<<6|63&e[i+1])),i+=2):(t.push(String.fromCharCode((15&r)<<12|(63&e[i+1])<<6|63&e[i+2])),i+=3)}return t.join("")}},c=function(){var e="0123456789abcdef";return{toBytes:function(e){for(var t=[],i=0;i<e.length;i+=2)t.push(parseInt(e.substr(i,2),16));return t},fromBytes:function(t){for(var i=[],r=0;r<t.length;r++){var s=t[r];i.push(e[(240&s)>>4]+e[15&s])}return i.join("")}}}(),u={16:10,24:12,32:14},l=[1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145],d=[99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22],p=[82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125],h=[3328402341,4168907908,4000806809,4135287693,4294111757,3597364157,3731845041,2445657428,1613770832,33620227,3462883241,1445669757,3892248089,3050821474,1303096294,3967186586,2412431941,528646813,2311702848,4202528135,4026202645,2992200171,2387036105,4226871307,1101901292,3017069671,1604494077,1169141738,597466303,1403299063,3832705686,2613100635,1974974402,3791519004,1033081774,1277568618,1815492186,2118074177,4126668546,2211236943,1748251740,1369810420,3521504564,4193382664,3799085459,2883115123,1647391059,706024767,134480908,2512897874,1176707941,2646852446,806885416,932615841,168101135,798661301,235341577,605164086,461406363,3756188221,3454790438,1311188841,2142417613,3933566367,302582043,495158174,1479289972,874125870,907746093,3698224818,3025820398,1537253627,2756858614,1983593293,3084310113,2108928974,1378429307,3722699582,1580150641,327451799,2790478837,3117535592,0,3253595436,1075847264,3825007647,2041688520,3059440621,3563743934,2378943302,1740553945,1916352843,2487896798,2555137236,2958579944,2244988746,3151024235,3320835882,1336584933,3992714006,2252555205,2588757463,1714631509,293963156,2319795663,3925473552,67240454,4269768577,2689618160,2017213508,631218106,1269344483,2723238387,1571005438,2151694528,93294474,1066570413,563977660,1882732616,4059428100,1673313503,2008463041,2950355573,1109467491,537923632,3858759450,4260623118,3218264685,2177748300,403442708,638784309,3287084079,3193921505,899127202,2286175436,773265209,2479146071,1437050866,4236148354,2050833735,3362022572,3126681063,840505643,3866325909,3227541664,427917720,2655997905,2749160575,1143087718,1412049534,999329963,193497219,2353415882,3354324521,1807268051,672404540,2816401017,3160301282,369822493,2916866934,3688947771,1681011286,1949973070,336202270,2454276571,201721354,1210328172,3093060836,2680341085,3184776046,1135389935,3294782118,965841320,831886756,3554993207,4068047243,3588745010,2345191491,1849112409,3664604599,26054028,2983581028,2622377682,1235855840,3630984372,2891339514,4092916743,3488279077,3395642799,4101667470,1202630377,268961816,1874508501,4034427016,1243948399,1546530418,941366308,1470539505,1941222599,2546386513,3421038627,2715671932,3899946140,1042226977,2521517021,1639824860,227249030,260737669,3765465232,2084453954,1907733956,3429263018,2420656344,100860677,4160157185,470683154,3261161891,1781871967,2924959737,1773779408,394692241,2579611992,974986535,664706745,3655459128,3958962195,731420851,571543859,3530123707,2849626480,126783113,865375399,765172662,1008606754,361203602,3387549984,2278477385,2857719295,1344809080,2782912378,59542671,1503764984,160008576,437062935,1707065306,3622233649,2218934982,3496503480,2185314755,697932208,1512910199,504303377,2075177163,2824099068,1841019862,739644986],y=[2781242211,2230877308,2582542199,2381740923,234877682,3184946027,2984144751,1418839493,1348481072,50462977,2848876391,2102799147,434634494,1656084439,3863849899,2599188086,1167051466,2636087938,1082771913,2281340285,368048890,3954334041,3381544775,201060592,3963727277,1739838676,4250903202,3930435503,3206782108,4149453988,2531553906,1536934080,3262494647,484572669,2923271059,1783375398,1517041206,1098792767,49674231,1334037708,1550332980,4098991525,886171109,150598129,2481090929,1940642008,1398944049,1059722517,201851908,1385547719,1699095331,1587397571,674240536,2704774806,252314885,3039795866,151914247,908333586,2602270848,1038082786,651029483,1766729511,3447698098,2682942837,454166793,2652734339,1951935532,775166490,758520603,3000790638,4004797018,4217086112,4137964114,1299594043,1639438038,3464344499,2068982057,1054729187,1901997871,2534638724,4121318227,1757008337,0,750906861,1614815264,535035132,3363418545,3988151131,3201591914,1183697867,3647454910,1265776953,3734260298,3566750796,3903871064,1250283471,1807470800,717615087,3847203498,384695291,3313910595,3617213773,1432761139,2484176261,3481945413,283769337,100925954,2180939647,4037038160,1148730428,3123027871,3813386408,4087501137,4267549603,3229630528,2315620239,2906624658,3156319645,1215313976,82966005,3747855548,3245848246,1974459098,1665278241,807407632,451280895,251524083,1841287890,1283575245,337120268,891687699,801369324,3787349855,2721421207,3431482436,959321879,1469301956,4065699751,2197585534,1199193405,2898814052,3887750493,724703513,2514908019,2696962144,2551808385,3516813135,2141445340,1715741218,2119445034,2872807568,2198571144,3398190662,700968686,3547052216,1009259540,2041044702,3803995742,487983883,1991105499,1004265696,1449407026,1316239930,504629770,3683797321,168560134,1816667172,3837287516,1570751170,1857934291,4014189740,2797888098,2822345105,2754712981,936633572,2347923833,852879335,1133234376,1500395319,3084545389,2348912013,1689376213,3533459022,3762923945,3034082412,4205598294,133428468,634383082,2949277029,2398386810,3913789102,403703816,3580869306,2297460856,1867130149,1918643758,607656988,4049053350,3346248884,1368901318,600565992,2090982877,2632479860,557719327,3717614411,3697393085,2249034635,2232388234,2430627952,1115438654,3295786421,2865522278,3633334344,84280067,33027830,303828494,2747425121,1600795957,4188952407,3496589753,2434238086,1486471617,658119965,3106381470,953803233,334231800,3005978776,857870609,3151128937,1890179545,2298973838,2805175444,3056442267,574365214,2450884487,550103529,1233637070,4289353045,2018519080,2057691103,2399374476,4166623649,2148108681,387583245,3664101311,836232934,3330556482,3100665960,3280093505,2955516313,2002398509,287182607,3413881008,4238890068,3597515707,975967766],g=[1671808611,2089089148,2006576759,2072901243,4061003762,1807603307,1873927791,3310653893,810573872,16974337,1739181671,729634347,4263110654,3613570519,2883997099,1989864566,3393556426,2191335298,3376449993,2106063485,4195741690,1508618841,1204391495,4027317232,2917941677,3563566036,2734514082,2951366063,2629772188,2767672228,1922491506,3227229120,3082974647,4246528509,2477669779,644500518,911895606,1061256767,4144166391,3427763148,878471220,2784252325,3845444069,4043897329,1905517169,3631459288,827548209,356461077,67897348,3344078279,593839651,3277757891,405286936,2527147926,84871685,2595565466,118033927,305538066,2157648768,3795705826,3945188843,661212711,2999812018,1973414517,152769033,2208177539,745822252,439235610,455947803,1857215598,1525593178,2700827552,1391895634,994932283,3596728278,3016654259,695947817,3812548067,795958831,2224493444,1408607827,3513301457,0,3979133421,543178784,4229948412,2982705585,1542305371,1790891114,3410398667,3201918910,961245753,1256100938,1289001036,1491644504,3477767631,3496721360,4012557807,2867154858,4212583931,1137018435,1305975373,861234739,2241073541,1171229253,4178635257,33948674,2139225727,1357946960,1011120188,2679776671,2833468328,1374921297,2751356323,1086357568,2408187279,2460827538,2646352285,944271416,4110742005,3168756668,3066132406,3665145818,560153121,271589392,4279952895,4077846003,3530407890,3444343245,202643468,322250259,3962553324,1608629855,2543990167,1154254916,389623319,3294073796,2817676711,2122513534,1028094525,1689045092,1575467613,422261273,1939203699,1621147744,2174228865,1339137615,3699352540,577127458,712922154,2427141008,2290289544,1187679302,3995715566,3100863416,339486740,3732514782,1591917662,186455563,3681988059,3762019296,844522546,978220090,169743370,1239126601,101321734,611076132,1558493276,3260915650,3547250131,2901361580,1655096418,2443721105,2510565781,3828863972,2039214713,3878868455,3359869896,928607799,1840765549,2374762893,3580146133,1322425422,2850048425,1823791212,1459268694,4094161908,3928346602,1706019429,2056189050,2934523822,135794696,3134549946,2022240376,628050469,779246638,472135708,2800834470,3032970164,3327236038,3894660072,3715932637,1956440180,522272287,1272813131,3185336765,2340818315,2323976074,1888542832,1044544574,3049550261,1722469478,1222152264,50660867,4127324150,236067854,1638122081,895445557,1475980887,3117443513,2257655686,3243809217,489110045,2662934430,3778599393,4162055160,2561878936,288563729,1773916777,3648039385,2391345038,2493985684,2612407707,505560094,2274497927,3911240169,3460925390,1442818645,678973480,3749357023,2358182796,2717407649,2306869641,219617805,3218761151,3862026214,1120306242,1756942440,1103331905,2578459033,762796589,252780047,2966125488,1425844308,3151392187,372911126],f=[1667474886,2088535288,2004326894,2071694838,4075949567,1802223062,1869591006,3318043793,808472672,16843522,1734846926,724270422,4278065639,3621216949,2880169549,1987484396,3402253711,2189597983,3385409673,2105378810,4210693615,1499065266,1195886990,4042263547,2913856577,3570689971,2728590687,2947541573,2627518243,2762274643,1920112356,3233831835,3082273397,4261223649,2475929149,640051788,909531756,1061110142,4160160501,3435941763,875846760,2779116625,3857003729,4059105529,1903268834,3638064043,825316194,353713962,67374088,3351728789,589522246,3284360861,404236336,2526454071,84217610,2593830191,117901582,303183396,2155911963,3806477791,3958056653,656894286,2998062463,1970642922,151591698,2206440989,741110872,437923380,454765878,1852748508,1515908788,2694904667,1381168804,993742198,3604373943,3014905469,690584402,3823320797,791638366,2223281939,1398011302,3520161977,0,3991743681,538992704,4244381667,2981218425,1532751286,1785380564,3419096717,3200178535,960056178,1246420628,1280103576,1482221744,3486468741,3503319995,4025428677,2863326543,4227536621,1128514950,1296947098,859002214,2240123921,1162203018,4193849577,33687044,2139062782,1347481760,1010582648,2678045221,2829640523,1364325282,2745433693,1077985408,2408548869,2459086143,2644360225,943212656,4126475505,3166494563,3065430391,3671750063,555836226,269496352,4294908645,4092792573,3537006015,3452783745,202118168,320025894,3974901699,1600119230,2543297077,1145359496,387397934,3301201811,2812801621,2122220284,1027426170,1684319432,1566435258,421079858,1936954854,1616945344,2172753945,1330631070,3705438115,572679748,707427924,2425400123,2290647819,1179044492,4008585671,3099120491,336870440,3739122087,1583276732,185277718,3688593069,3772791771,842159716,976899700,168435220,1229577106,101059084,606366792,1549591736,3267517855,3553849021,2897014595,1650632388,2442242105,2509612081,3840161747,2038008818,3890688725,3368567691,926374254,1835907034,2374863873,3587531953,1313788572,2846482505,1819063512,1448540844,4109633523,3941213647,1701162954,2054852340,2930698567,134748176,3132806511,2021165296,623210314,774795868,471606328,2795958615,3031746419,3334885783,3907527627,3722280097,1953799400,522133822,1263263126,3183336545,2341176845,2324333839,1886425312,1044267644,3048588401,1718004428,1212733584,50529542,4143317495,235803164,1633788866,892690282,1465383342,3115962473,2256965911,3250673817,488449850,2661202215,3789633753,4177007595,2560144171,286339874,1768537042,3654906025,2391705863,2492770099,2610673197,505291324,2273808917,3924369609,3469625735,1431699370,673740880,3755965093,2358021891,2711746649,2307489801,218961690,3217021541,3873845719,1111672452,1751693520,1094828930,2576986153,757954394,252645662,2964376443,1414855848,3149649517,370555436],m=[1374988112,2118214995,437757123,975658646,1001089995,530400753,2902087851,1273168787,540080725,2910219766,2295101073,4110568485,1340463100,3307916247,641025152,3043140495,3736164937,632953703,1172967064,1576976609,3274667266,2169303058,2370213795,1809054150,59727847,361929877,3211623147,2505202138,3569255213,1484005843,1239443753,2395588676,1975683434,4102977912,2572697195,666464733,3202437046,4035489047,3374361702,2110667444,1675577880,3843699074,2538681184,1649639237,2976151520,3144396420,4269907996,4178062228,1883793496,2403728665,2497604743,1383856311,2876494627,1917518562,3810496343,1716890410,3001755655,800440835,2261089178,3543599269,807962610,599762354,33778362,3977675356,2328828971,2809771154,4077384432,1315562145,1708848333,101039829,3509871135,3299278474,875451293,2733856160,92987698,2767645557,193195065,1080094634,1584504582,3178106961,1042385657,2531067453,3711829422,1306967366,2438237621,1908694277,67556463,1615861247,429456164,3602770327,2302690252,1742315127,2968011453,126454664,3877198648,2043211483,2709260871,2084704233,4169408201,0,159417987,841739592,504459436,1817866830,4245618683,260388950,1034867998,908933415,168810852,1750902305,2606453969,607530554,202008497,2472011535,3035535058,463180190,2160117071,1641816226,1517767529,470948374,3801332234,3231722213,1008918595,303765277,235474187,4069246893,766945465,337553864,1475418501,2943682380,4003061179,2743034109,4144047775,1551037884,1147550661,1543208500,2336434550,3408119516,3069049960,3102011747,3610369226,1113818384,328671808,2227573024,2236228733,3535486456,2935566865,3341394285,496906059,3702665459,226906860,2009195472,733156972,2842737049,294930682,1206477858,2835123396,2700099354,1451044056,573804783,2269728455,3644379585,2362090238,2564033334,2801107407,2776292904,3669462566,1068351396,742039012,1350078989,1784663195,1417561698,4136440770,2430122216,775550814,2193862645,2673705150,1775276924,1876241833,3475313331,3366754619,270040487,3902563182,3678124923,3441850377,1851332852,3969562369,2203032232,3868552805,2868897406,566021896,4011190502,3135740889,1248802510,3936291284,699432150,832877231,708780849,3332740144,899835584,1951317047,4236429990,3767586992,866637845,4043610186,1106041591,2144161806,395441711,1984812685,1139781709,3433712980,3835036895,2664543715,1282050075,3240894392,1181045119,2640243204,25965917,4203181171,4211818798,3009879386,2463879762,3910161971,1842759443,2597806476,933301370,1509430414,3943906441,3467192302,3076639029,3776767469,2051518780,2631065433,1441952575,404016761,1942435775,1408749034,1610459739,3745345300,2017778566,3400528769,3110650942,941896748,3265478751,371049330,3168937228,675039627,4279080257,967311729,135050206,3635733660,1683407248,2076935265,3576870512,1215061108,3501741890],_=[1347548327,1400783205,3273267108,2520393566,3409685355,4045380933,2880240216,2471224067,1428173050,4138563181,2441661558,636813900,4233094615,3620022987,2149987652,2411029155,1239331162,1730525723,2554718734,3781033664,46346101,310463728,2743944855,3328955385,3875770207,2501218972,3955191162,3667219033,768917123,3545789473,692707433,1150208456,1786102409,2029293177,1805211710,3710368113,3065962831,401639597,1724457132,3028143674,409198410,2196052529,1620529459,1164071807,3769721975,2226875310,486441376,2499348523,1483753576,428819965,2274680428,3075636216,598438867,3799141122,1474502543,711349675,129166120,53458370,2592523643,2782082824,4063242375,2988687269,3120694122,1559041666,730517276,2460449204,4042459122,2706270690,3446004468,3573941694,533804130,2328143614,2637442643,2695033685,839224033,1973745387,957055980,2856345839,106852767,1371368976,4181598602,1033297158,2933734917,1179510461,3046200461,91341917,1862534868,4284502037,605657339,2547432937,3431546947,2003294622,3182487618,2282195339,954669403,3682191598,1201765386,3917234703,3388507166,0,2198438022,1211247597,2887651696,1315723890,4227665663,1443857720,507358933,657861945,1678381017,560487590,3516619604,975451694,2970356327,261314535,3535072918,2652609425,1333838021,2724322336,1767536459,370938394,182621114,3854606378,1128014560,487725847,185469197,2918353863,3106780840,3356761769,2237133081,1286567175,3152976349,4255350624,2683765030,3160175349,3309594171,878443390,1988838185,3704300486,1756818940,1673061617,3403100636,272786309,1075025698,545572369,2105887268,4174560061,296679730,1841768865,1260232239,4091327024,3960309330,3497509347,1814803222,2578018489,4195456072,575138148,3299409036,446754879,3629546796,4011996048,3347532110,3252238545,4270639778,915985419,3483825537,681933534,651868046,2755636671,3828103837,223377554,2607439820,1649704518,3270937875,3901806776,1580087799,4118987695,3198115200,2087309459,2842678573,3016697106,1003007129,2802849917,1860738147,2077965243,164439672,4100872472,32283319,2827177882,1709610350,2125135846,136428751,3874428392,3652904859,3460984630,3572145929,3593056380,2939266226,824852259,818324884,3224740454,930369212,2801566410,2967507152,355706840,1257309336,4148292826,243256656,790073846,2373340630,1296297904,1422699085,3756299780,3818836405,457992840,3099667487,2135319889,77422314,1560382517,1945798516,788204353,1521706781,1385356242,870912086,325965383,2358957921,2050466060,2388260884,2313884476,4006521127,901210569,3990953189,1014646705,1503449823,1062597235,2031621326,3212035895,3931371469,1533017514,350174575,2256028891,2177544179,1052338372,741876788,1606591296,1914052035,213705253,2334669897,1107234197,1899603969,3725069491,2631447780,2422494913,1635502980,1893020342,1950903388,1120974935],b=[2807058932,1699970625,2764249623,1586903591,1808481195,1173430173,1487645946,59984867,4199882800,1844882806,1989249228,1277555970,3623636965,3419915562,1149249077,2744104290,1514790577,459744698,244860394,3235995134,1963115311,4027744588,2544078150,4190530515,1608975247,2627016082,2062270317,1507497298,2200818878,567498868,1764313568,3359936201,2305455554,2037970062,1047239e3,1910319033,1337376481,2904027272,2892417312,984907214,1243112415,830661914,861968209,2135253587,2011214180,2927934315,2686254721,731183368,1750626376,4246310725,1820824798,4172763771,3542330227,48394827,2404901663,2871682645,671593195,3254988725,2073724613,145085239,2280796200,2779915199,1790575107,2187128086,472615631,3029510009,4075877127,3802222185,4107101658,3201631749,1646252340,4270507174,1402811438,1436590835,3778151818,3950355702,3963161475,4020912224,2667994737,273792366,2331590177,104699613,95345982,3175501286,2377486676,1560637892,3564045318,369057872,4213447064,3919042237,1137477952,2658625497,1119727848,2340947849,1530455833,4007360968,172466556,266959938,516552836,0,2256734592,3980931627,1890328081,1917742170,4294704398,945164165,3575528878,958871085,3647212047,2787207260,1423022939,775562294,1739656202,3876557655,2530391278,2443058075,3310321856,547512796,1265195639,437656594,3121275539,719700128,3762502690,387781147,218828297,3350065803,2830708150,2848461854,428169201,122466165,3720081049,1627235199,648017665,4122762354,1002783846,2117360635,695634755,3336358691,4234721005,4049844452,3704280881,2232435299,574624663,287343814,612205898,1039717051,840019705,2708326185,793451934,821288114,1391201670,3822090177,376187827,3113855344,1224348052,1679968233,2361698556,1058709744,752375421,2431590963,1321699145,3519142200,2734591178,188127444,2177869557,3727205754,2384911031,3215212461,2648976442,2450346104,3432737375,1180849278,331544205,3102249176,4150144569,2952102595,2159976285,2474404304,766078933,313773861,2570832044,2108100632,1668212892,3145456443,2013908262,418672217,3070356634,2594734927,1852171925,3867060991,3473416636,3907448597,2614737639,919489135,164948639,2094410160,2997825956,590424639,2486224549,1723872674,3157750862,3399941250,3501252752,3625268135,2555048196,3673637356,1343127501,4130281361,3599595085,2957853679,1297403050,81781910,3051593425,2283490410,532201772,1367295589,3926170974,895287692,1953757831,1093597963,492483431,3528626907,1446242576,1192455638,1636604631,209336225,344873464,1015671571,669961897,3375740769,3857572124,2973530695,3747192018,1933530610,3464042516,935293895,3454686199,2858115069,1863638845,3683022916,4085369519,3292445032,875313188,1080017571,3279033885,621591778,1233856572,2504130317,24197544,3017672716,3835484340,3247465558,2220981195,3060847922,1551124588,1463996600],w=[4104605777,1097159550,396673818,660510266,2875968315,2638606623,4200115116,3808662347,821712160,1986918061,3430322568,38544885,3856137295,718002117,893681702,1654886325,2975484382,3122358053,3926825029,4274053469,796197571,1290801793,1184342925,3556361835,2405426947,2459735317,1836772287,1381620373,3196267988,1948373848,3764988233,3385345166,3263785589,2390325492,1480485785,3111247143,3780097726,2293045232,548169417,3459953789,3746175075,439452389,1362321559,1400849762,1685577905,1806599355,2174754046,137073913,1214797936,1174215055,3731654548,2079897426,1943217067,1258480242,529487843,1437280870,3945269170,3049390895,3313212038,923313619,679998e3,3215307299,57326082,377642221,3474729866,2041877159,133361907,1776460110,3673476453,96392454,878845905,2801699524,777231668,4082475170,2330014213,4142626212,2213296395,1626319424,1906247262,1846563261,562755902,3708173718,1040559837,3871163981,1418573201,3294430577,114585348,1343618912,2566595609,3186202582,1078185097,3651041127,3896688048,2307622919,425408743,3371096953,2081048481,1108339068,2216610296,0,2156299017,736970802,292596766,1517440620,251657213,2235061775,2933202493,758720310,265905162,1554391400,1532285339,908999204,174567692,1474760595,4002861748,2610011675,3234156416,3693126241,2001430874,303699484,2478443234,2687165888,585122620,454499602,151849742,2345119218,3064510765,514443284,4044981591,1963412655,2581445614,2137062819,19308535,1928707164,1715193156,4219352155,1126790795,600235211,3992742070,3841024952,836553431,1669664834,2535604243,3323011204,1243905413,3141400786,4180808110,698445255,2653899549,2989552604,2253581325,3252932727,3004591147,1891211689,2487810577,3915653703,4237083816,4030667424,2100090966,865136418,1229899655,953270745,3399679628,3557504664,4118925222,2061379749,3079546586,2915017791,983426092,2022837584,1607244650,2118541908,2366882550,3635996816,972512814,3283088770,1568718495,3499326569,3576539503,621982671,2895723464,410887952,2623762152,1002142683,645401037,1494807662,2595684844,1335535747,2507040230,4293295786,3167684641,367585007,3885750714,1865862730,2668221674,2960971305,2763173681,1059270954,2777952454,2724642869,1320957812,2194319100,2429595872,2815956275,77089521,3973773121,3444575871,2448830231,1305906550,4021308739,2857194700,2516901860,3518358430,1787304780,740276417,1699839814,1592394909,2352307457,2272556026,188821243,1729977011,3687994002,274084841,3594982253,3613494426,2701949495,4162096729,322734571,2837966542,1640576439,484830689,1202797690,3537852828,4067639125,349075736,3342319475,4157467219,4255800159,1030690015,1155237496,2951971274,1757691577,607398968,2738905026,499347990,3794078908,1011452712,227885567,2818666809,213114376,3034881240,1455525988,3414450555,850817237,1817998408,3092726480],v=[0,235474187,470948374,303765277,941896748,908933415,607530554,708780849,1883793496,2118214995,1817866830,1649639237,1215061108,1181045119,1417561698,1517767529,3767586992,4003061179,4236429990,4069246893,3635733660,3602770327,3299278474,3400528769,2430122216,2664543715,2362090238,2193862645,2835123396,2801107407,3035535058,3135740889,3678124923,3576870512,3341394285,3374361702,3810496343,3977675356,4279080257,4043610186,2876494627,2776292904,3076639029,3110650942,2472011535,2640243204,2403728665,2169303058,1001089995,899835584,666464733,699432150,59727847,226906860,530400753,294930682,1273168787,1172967064,1475418501,1509430414,1942435775,2110667444,1876241833,1641816226,2910219766,2743034109,2976151520,3211623147,2505202138,2606453969,2302690252,2269728455,3711829422,3543599269,3240894392,3475313331,3843699074,3943906441,4178062228,4144047775,1306967366,1139781709,1374988112,1610459739,1975683434,2076935265,1775276924,1742315127,1034867998,866637845,566021896,800440835,92987698,193195065,429456164,395441711,1984812685,2017778566,1784663195,1683407248,1315562145,1080094634,1383856311,1551037884,101039829,135050206,437757123,337553864,1042385657,807962610,573804783,742039012,2531067453,2564033334,2328828971,2227573024,2935566865,2700099354,3001755655,3168937228,3868552805,3902563182,4203181171,4102977912,3736164937,3501741890,3265478751,3433712980,1106041591,1340463100,1576976609,1408749034,2043211483,2009195472,1708848333,1809054150,832877231,1068351396,766945465,599762354,159417987,126454664,361929877,463180190,2709260871,2943682380,3178106961,3009879386,2572697195,2538681184,2236228733,2336434550,3509871135,3745345300,3441850377,3274667266,3910161971,3877198648,4110568485,4211818798,2597806476,2497604743,2261089178,2295101073,2733856160,2902087851,3202437046,2968011453,3936291284,3835036895,4136440770,4169408201,3535486456,3702665459,3467192302,3231722213,2051518780,1951317047,1716890410,1750902305,1113818384,1282050075,1584504582,1350078989,168810852,67556463,371049330,404016761,841739592,1008918595,775550814,540080725,3969562369,3801332234,4035489047,4269907996,3569255213,3669462566,3366754619,3332740144,2631065433,2463879762,2160117071,2395588676,2767645557,2868897406,3102011747,3069049960,202008497,33778362,270040487,504459436,875451293,975658646,675039627,641025152,2084704233,1917518562,1615861247,1851332852,1147550661,1248802510,1484005843,1451044056,933301370,967311729,733156972,632953703,260388950,25965917,328671808,496906059,1206477858,1239443753,1543208500,1441952575,2144161806,1908694277,1675577880,1842759443,3610369226,3644379585,3408119516,3307916247,4011190502,3776767469,4077384432,4245618683,2809771154,2842737049,3144396420,3043140495,2673705150,2438237621,2203032232,2370213795],E=[0,185469197,370938394,487725847,741876788,657861945,975451694,824852259,1483753576,1400783205,1315723890,1164071807,1950903388,2135319889,1649704518,1767536459,2967507152,3152976349,2801566410,2918353863,2631447780,2547432937,2328143614,2177544179,3901806776,3818836405,4270639778,4118987695,3299409036,3483825537,3535072918,3652904859,2077965243,1893020342,1841768865,1724457132,1474502543,1559041666,1107234197,1257309336,598438867,681933534,901210569,1052338372,261314535,77422314,428819965,310463728,3409685355,3224740454,3710368113,3593056380,3875770207,3960309330,4045380933,4195456072,2471224067,2554718734,2237133081,2388260884,3212035895,3028143674,2842678573,2724322336,4138563181,4255350624,3769721975,3955191162,3667219033,3516619604,3431546947,3347532110,2933734917,2782082824,3099667487,3016697106,2196052529,2313884476,2499348523,2683765030,1179510461,1296297904,1347548327,1533017514,1786102409,1635502980,2087309459,2003294622,507358933,355706840,136428751,53458370,839224033,957055980,605657339,790073846,2373340630,2256028891,2607439820,2422494913,2706270690,2856345839,3075636216,3160175349,3573941694,3725069491,3273267108,3356761769,4181598602,4063242375,4011996048,3828103837,1033297158,915985419,730517276,545572369,296679730,446754879,129166120,213705253,1709610350,1860738147,1945798516,2029293177,1239331162,1120974935,1606591296,1422699085,4148292826,4233094615,3781033664,3931371469,3682191598,3497509347,3446004468,3328955385,2939266226,2755636671,3106780840,2988687269,2198438022,2282195339,2501218972,2652609425,1201765386,1286567175,1371368976,1521706781,1805211710,1620529459,2105887268,1988838185,533804130,350174575,164439672,46346101,870912086,954669403,636813900,788204353,2358957921,2274680428,2592523643,2441661558,2695033685,2880240216,3065962831,3182487618,3572145929,3756299780,3270937875,3388507166,4174560061,4091327024,4006521127,3854606378,1014646705,930369212,711349675,560487590,272786309,457992840,106852767,223377554,1678381017,1862534868,1914052035,2031621326,1211247597,1128014560,1580087799,1428173050,32283319,182621114,401639597,486441376,768917123,651868046,1003007129,818324884,1503449823,1385356242,1333838021,1150208456,1973745387,2125135846,1673061617,1756818940,2970356327,3120694122,2802849917,2887651696,2637442643,2520393566,2334669897,2149987652,3917234703,3799141122,4284502037,4100872472,3309594171,3460984630,3545789473,3629546796,2050466060,1899603969,1814803222,1730525723,1443857720,1560382517,1075025698,1260232239,575138148,692707433,878443390,1062597235,243256656,91341917,409198410,325965383,3403100636,3252238545,3704300486,3620022987,3874428392,3990953189,4042459122,4227665663,2460449204,2578018489,2226875310,2411029155,3198115200,3046200461,2827177882,2743944855],T=[0,218828297,437656594,387781147,875313188,958871085,775562294,590424639,1750626376,1699970625,1917742170,2135253587,1551124588,1367295589,1180849278,1265195639,3501252752,3720081049,3399941250,3350065803,3835484340,3919042237,4270507174,4085369519,3102249176,3051593425,2734591178,2952102595,2361698556,2177869557,2530391278,2614737639,3145456443,3060847922,2708326185,2892417312,2404901663,2187128086,2504130317,2555048196,3542330227,3727205754,3375740769,3292445032,3876557655,3926170974,4246310725,4027744588,1808481195,1723872674,1910319033,2094410160,1608975247,1391201670,1173430173,1224348052,59984867,244860394,428169201,344873464,935293895,984907214,766078933,547512796,1844882806,1627235199,2011214180,2062270317,1507497298,1423022939,1137477952,1321699145,95345982,145085239,532201772,313773861,830661914,1015671571,731183368,648017665,3175501286,2957853679,2807058932,2858115069,2305455554,2220981195,2474404304,2658625497,3575528878,3625268135,3473416636,3254988725,3778151818,3963161475,4213447064,4130281361,3599595085,3683022916,3432737375,3247465558,3802222185,4020912224,4172763771,4122762354,3201631749,3017672716,2764249623,2848461854,2331590177,2280796200,2431590963,2648976442,104699613,188127444,472615631,287343814,840019705,1058709744,671593195,621591778,1852171925,1668212892,1953757831,2037970062,1514790577,1463996600,1080017571,1297403050,3673637356,3623636965,3235995134,3454686199,4007360968,3822090177,4107101658,4190530515,2997825956,3215212461,2830708150,2779915199,2256734592,2340947849,2627016082,2443058075,172466556,122466165,273792366,492483431,1047239e3,861968209,612205898,695634755,1646252340,1863638845,2013908262,1963115311,1446242576,1530455833,1277555970,1093597963,1636604631,1820824798,2073724613,1989249228,1436590835,1487645946,1337376481,1119727848,164948639,81781910,331544205,516552836,1039717051,821288114,669961897,719700128,2973530695,3157750862,2871682645,2787207260,2232435299,2283490410,2667994737,2450346104,3647212047,3564045318,3279033885,3464042516,3980931627,3762502690,4150144569,4199882800,3070356634,3121275539,2904027272,2686254721,2200818878,2384911031,2570832044,2486224549,3747192018,3528626907,3310321856,3359936201,3950355702,3867060991,4049844452,4234721005,1739656202,1790575107,2108100632,1890328081,1402811438,1586903591,1233856572,1149249077,266959938,48394827,369057872,418672217,1002783846,919489135,567498868,752375421,209336225,24197544,376187827,459744698,945164165,895287692,574624663,793451934,1679968233,1764313568,2117360635,1933530610,1343127501,1560637892,1243112415,1192455638,3704280881,3519142200,3336358691,3419915562,3907448597,3857572124,4075877127,4294704398,3029510009,3113855344,2927934315,2744104290,2159976285,2377486676,2594734927,2544078150],S=[0,151849742,303699484,454499602,607398968,758720310,908999204,1059270954,1214797936,1097159550,1517440620,1400849762,1817998408,1699839814,2118541908,2001430874,2429595872,2581445614,2194319100,2345119218,3034881240,3186202582,2801699524,2951971274,3635996816,3518358430,3399679628,3283088770,4237083816,4118925222,4002861748,3885750714,1002142683,850817237,698445255,548169417,529487843,377642221,227885567,77089521,1943217067,2061379749,1640576439,1757691577,1474760595,1592394909,1174215055,1290801793,2875968315,2724642869,3111247143,2960971305,2405426947,2253581325,2638606623,2487810577,3808662347,3926825029,4044981591,4162096729,3342319475,3459953789,3576539503,3693126241,1986918061,2137062819,1685577905,1836772287,1381620373,1532285339,1078185097,1229899655,1040559837,923313619,740276417,621982671,439452389,322734571,137073913,19308535,3871163981,4021308739,4104605777,4255800159,3263785589,3414450555,3499326569,3651041127,2933202493,2815956275,3167684641,3049390895,2330014213,2213296395,2566595609,2448830231,1305906550,1155237496,1607244650,1455525988,1776460110,1626319424,2079897426,1928707164,96392454,213114376,396673818,514443284,562755902,679998e3,865136418,983426092,3708173718,3557504664,3474729866,3323011204,4180808110,4030667424,3945269170,3794078908,2507040230,2623762152,2272556026,2390325492,2975484382,3092726480,2738905026,2857194700,3973773121,3856137295,4274053469,4157467219,3371096953,3252932727,3673476453,3556361835,2763173681,2915017791,3064510765,3215307299,2156299017,2307622919,2459735317,2610011675,2081048481,1963412655,1846563261,1729977011,1480485785,1362321559,1243905413,1126790795,878845905,1030690015,645401037,796197571,274084841,425408743,38544885,188821243,3613494426,3731654548,3313212038,3430322568,4082475170,4200115116,3780097726,3896688048,2668221674,2516901860,2366882550,2216610296,3141400786,2989552604,2837966542,2687165888,1202797690,1320957812,1437280870,1554391400,1669664834,1787304780,1906247262,2022837584,265905162,114585348,499347990,349075736,736970802,585122620,972512814,821712160,2595684844,2478443234,2293045232,2174754046,3196267988,3079546586,2895723464,2777952454,3537852828,3687994002,3234156416,3385345166,4142626212,4293295786,3841024952,3992742070,174567692,57326082,410887952,292596766,777231668,660510266,1011452712,893681702,1108339068,1258480242,1343618912,1494807662,1715193156,1865862730,1948373848,2100090966,2701949495,2818666809,3004591147,3122358053,2235061775,2352307457,2535604243,2653899549,3915653703,3764988233,4219352155,4067639125,3444575871,3294430577,3746175075,3594982253,836553431,953270745,600235211,718002117,367585007,484830689,133361907,251657213,2041877159,1891211689,1806599355,1654886325,1568718495,1418573201,1335535747,1184342925];function A(e){for(var t=[],i=0;i<e.length;i+=4)t.push(e[i]<<24|e[i+1]<<16|e[i+2]<<8|e[i+3]);return t}var R=function(e){if(!(this instanceof R))throw Error("AES must be instanitated with `new`");Object.defineProperty(this,"key",{value:s(e,!0)}),this._prepare()};R.prototype._prepare=function(){var e=u[this.key.length];if(null==e)throw new Error("invalid key size (must be 16, 24 or 32 bytes)");this._Ke=[],this._Kd=[];for(var t=0;t<=e;t++)this._Ke.push([0,0,0,0]),this._Kd.push([0,0,0,0]);var i,r=4*(e+1),s=this.key.length/4,n=A(this.key);for(t=0;t<s;t++)i=t>>2,this._Ke[i][t%4]=n[t],this._Kd[e-i][t%4]=n[t];for(var a,o=0,c=s;c<r;){if(a=n[s-1],n[0]^=d[a>>16&255]<<24^d[a>>8&255]<<16^d[255&a]<<8^d[a>>24&255]^l[o]<<24,o+=1,8!=s)for(t=1;t<s;t++)n[t]^=n[t-1];else{for(t=1;t<s/2;t++)n[t]^=n[t-1];a=n[s/2-1],n[s/2]^=d[255&a]^d[a>>8&255]<<8^d[a>>16&255]<<16^d[a>>24&255]<<24;for(t=s/2+1;t<s;t++)n[t]^=n[t-1]}for(t=0;t<s&&c<r;)p=c>>2,h=c%4,this._Ke[p][h]=n[t],this._Kd[e-p][h]=n[t++],c++}for(var p=1;p<e;p++)for(var h=0;h<4;h++)a=this._Kd[p][h],this._Kd[p][h]=v[a>>24&255]^E[a>>16&255]^T[a>>8&255]^S[255&a]},R.prototype.encrypt=function(e){if(16!=e.length)throw new Error("invalid plaintext size (must be 16 bytes)");for(var t=this._Ke.length-1,i=[0,0,0,0],r=A(e),s=0;s<4;s++)r[s]^=this._Ke[0][s];for(var a=1;a<t;a++){for(s=0;s<4;s++)i[s]=h[r[s]>>24&255]^y[r[(s+1)%4]>>16&255]^g[r[(s+2)%4]>>8&255]^f[255&r[(s+3)%4]]^this._Ke[a][s];r=i.slice()}var o,c=n(16);for(s=0;s<4;s++)o=this._Ke[t][s],c[4*s]=255&(d[r[s]>>24&255]^o>>24),c[4*s+1]=255&(d[r[(s+1)%4]>>16&255]^o>>16),c[4*s+2]=255&(d[r[(s+2)%4]>>8&255]^o>>8),c[4*s+3]=255&(d[255&r[(s+3)%4]]^o);return c},R.prototype.decrypt=function(e){if(16!=e.length)throw new Error("invalid ciphertext size (must be 16 bytes)");for(var t=this._Kd.length-1,i=[0,0,0,0],r=A(e),s=0;s<4;s++)r[s]^=this._Kd[0][s];for(var a=1;a<t;a++){for(s=0;s<4;s++)i[s]=m[r[s]>>24&255]^_[r[(s+3)%4]>>16&255]^b[r[(s+2)%4]>>8&255]^w[255&r[(s+1)%4]]^this._Kd[a][s];r=i.slice()}var o,c=n(16);for(s=0;s<4;s++)o=this._Kd[t][s],c[4*s]=255&(p[r[s]>>24&255]^o>>24),c[4*s+1]=255&(p[r[(s+3)%4]>>16&255]^o>>16),c[4*s+2]=255&(p[r[(s+2)%4]>>8&255]^o>>8),c[4*s+3]=255&(p[255&r[(s+1)%4]]^o);return c};var z=function(e){if(!(this instanceof z))throw Error("AES must be instanitated with `new`");this.description="Electronic Code Block",this.name="ecb",this._aes=new R(e)};z.prototype.encrypt=function(e){if((e=s(e)).length%16!==0)throw new Error("invalid plaintext size (must be multiple of 16 bytes)");for(var t=n(e.length),i=n(16),r=0;r<e.length;r+=16)a(e,i,0,r,r+16),a(i=this._aes.encrypt(i),t,r);return t},z.prototype.decrypt=function(e){if((e=s(e)).length%16!==0)throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");for(var t=n(e.length),i=n(16),r=0;r<e.length;r+=16)a(e,i,0,r,r+16),a(i=this._aes.decrypt(i),t,r);return t};var q=function(e,t){if(!(this instanceof q))throw Error("AES must be instanitated with `new`");if(this.description="Cipher Block Chaining",this.name="cbc",t){if(16!=t.length)throw new Error("invalid initialation vector size (must be 16 bytes)")}else t=n(16);this._lastCipherblock=s(t,!0),this._aes=new R(e)};q.prototype.encrypt=function(e){if((e=s(e)).length%16!==0)throw new Error("invalid plaintext size (must be multiple of 16 bytes)");for(var t=n(e.length),i=n(16),r=0;r<e.length;r+=16){a(e,i,0,r,r+16);for(var o=0;o<16;o++)i[o]^=this._lastCipherblock[o];this._lastCipherblock=this._aes.encrypt(i),a(this._lastCipherblock,t,r)}return t},q.prototype.decrypt=function(e){if((e=s(e)).length%16!==0)throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");for(var t=n(e.length),i=n(16),r=0;r<e.length;r+=16){a(e,i,0,r,r+16),i=this._aes.decrypt(i);for(var o=0;o<16;o++)t[r+o]=i[o]^this._lastCipherblock[o];a(e,this._lastCipherblock,0,r,r+16)}return t};var U=function(e,t,i){if(!(this instanceof U))throw Error("AES must be instanitated with `new`");if(this.description="Cipher Feedback",this.name="cfb",t){if(16!=t.length)throw new Error("invalid initialation vector size (must be 16 size)")}else t=n(16);i||(i=1),this.segmentSize=i,this._shiftRegister=s(t,!0),this._aes=new R(e)};U.prototype.encrypt=function(e){if(e.length%this.segmentSize!=0)throw new Error("invalid plaintext size (must be segmentSize bytes)");for(var t,i=s(e,!0),r=0;r<i.length;r+=this.segmentSize){t=this._aes.encrypt(this._shiftRegister);for(var n=0;n<this.segmentSize;n++)i[r+n]^=t[n];a(this._shiftRegister,this._shiftRegister,0,this.segmentSize),a(i,this._shiftRegister,16-this.segmentSize,r,r+this.segmentSize)}return i},U.prototype.decrypt=function(e){if(e.length%this.segmentSize!=0)throw new Error("invalid ciphertext size (must be segmentSize bytes)");for(var t,i=s(e,!0),r=0;r<i.length;r+=this.segmentSize){t=this._aes.encrypt(this._shiftRegister);for(var n=0;n<this.segmentSize;n++)i[r+n]^=t[n];a(this._shiftRegister,this._shiftRegister,0,this.segmentSize),a(e,this._shiftRegister,16-this.segmentSize,r,r+this.segmentSize)}return i};var x=function(e,t){if(!(this instanceof x))throw Error("AES must be instanitated with `new`");if(this.description="Output Feedback",this.name="ofb",t){if(16!=t.length)throw new Error("invalid initialation vector size (must be 16 bytes)")}else t=n(16);this._lastPrecipher=s(t,!0),this._lastPrecipherIndex=16,this._aes=new R(e)};x.prototype.encrypt=function(e){for(var t=s(e,!0),i=0;i<t.length;i++)16===this._lastPrecipherIndex&&(this._lastPrecipher=this._aes.encrypt(this._lastPrecipher),this._lastPrecipherIndex=0),t[i]^=this._lastPrecipher[this._lastPrecipherIndex++];return t},x.prototype.decrypt=x.prototype.encrypt;var B=function(e){if(!(this instanceof B))throw Error("Counter must be instanitated with `new`");0===e||e||(e=1),"number"===typeof e?(this._counter=n(16),this.setValue(e)):this.setBytes(e)};B.prototype.setValue=function(e){if("number"!==typeof e||parseInt(e)!=e)throw new Error("invalid counter value (must be an integer)");for(var t=15;t>=0;--t)this._counter[t]=e%256,e>>=8},B.prototype.setBytes=function(e){if(16!=(e=s(e,!0)).length)throw new Error("invalid counter bytes size (must be 16 bytes)");this._counter=e},B.prototype.increment=function(){for(var e=15;e>=0;e--){if(255!==this._counter[e]){this._counter[e]++;break}this._counter[e]=0}};var C=function(e,t){if(!(this instanceof C))throw Error("AES must be instanitated with `new`");this.description="Counter",this.name="ctr",t instanceof B||(t=new B(t)),this._counter=t,this._remainingCounter=null,this._remainingCounterIndex=16,this._aes=new R(e)};C.prototype.encrypt=function(e){for(var t=s(e,!0),i=0;i<t.length;i++)16===this._remainingCounterIndex&&(this._remainingCounter=this._aes.encrypt(this._counter._counter),this._remainingCounterIndex=0,this._counter.increment()),t[i]^=this._remainingCounter[this._remainingCounterIndex++];return t},C.prototype.decrypt=C.prototype.encrypt;var k={AES:R,Counter:B,ModeOfOperation:{ecb:z,cbc:q,cfb:U,ofb:x,ctr:C},utils:{hex:c,utf8:o},padding:{pkcs7:{pad:function(e){var t=16-(e=s(e,!0)).length%16,i=n(e.length+t);a(e,i);for(var r=e.length;r<i.length;r++)i[r]=t;return i},strip:function(e){if((e=s(e,!0)).length<16)throw new Error("PKCS#7 invalid length");var t=e[e.length-1];if(t>16)throw new Error("PKCS#7 padding byte out of range");for(var i=e.length-t,r=0;r<t;r++)if(e[i+r]!==t)throw new Error("PKCS#7 invalid padding byte");var o=n(i);return a(e,o,0,0,i),o}}},_arrayTest:{coerceArray:s,createArray:n,copyArray:a}};e.exports=k}()},92:function(e,t,i){"use strict";var r,s=Object.create,n=Object.defineProperty,a=Object.getOwnPropertyDescriptor,o=Object.getOwnPropertyNames,c=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty,l=(e,t)=>{for(var i in t)n(e,i,{get:t[i],enumerable:!0})},d=(e,t,i,r)=>{if(t&&"object"===typeof t||"function"===typeof t)for(let s of o(t))u.call(e,s)||s===i||n(e,s,{get:()=>t[s],enumerable:!(r=a(t,s))||r.enumerable});return e},p=(e,t,i)=>(i=null!=e?s(c(e)):{},d(!t&&e&&e.__esModule?i:n(i,"default",{value:e,enumerable:!0}),e)),h=(e,t,i,r)=>{for(var s,o=r>1?void 0:r?a(t,i):t,c=e.length-1;c>=0;c--)(s=e[c])&&(o=(r?s(t,i,o):s(o))||o);return r&&o&&n(t,i,o),o},y={};l(y,{ApiError:()=>Dr,AptosAccount:()=>nt,AptosClient:()=>Nr,BCS:()=>k,CoinClient:()=>Vr,FailedTransactionError:()=>$r,FaucetClient:()=>Gr,HexString:()=>A,TokenClient:()=>jr,TokenTypes:()=>Jr,TransactionBuilder:()=>Cr,TransactionBuilderABI:()=>Mr,TransactionBuilderEd25519:()=>kr,TransactionBuilderMultiEd25519:()=>Ir,TransactionBuilderRemoteABI:()=>Pr,TxnBuilderTypes:()=>C,TypeTagParser:()=>Ar,Types:()=>at,WaitForTransactionError:()=>Hr,derivePath:()=>T}),e.exports=(r=y,d(n({},"__esModule",{value:!0}),r));var g=p(i(208)),f=p(i(1866)),m=i(59),_=(p(i(208)),i(480)),b=i(576),w=i(59),v=/^m(\/[0-9]+')+$/,E=e=>e.replace("'",""),T=(e,t,i=2147483648)=>{if(!(e=>!!v.test(e)&&!e.split("/").slice(1).map(E).some(Number.isNaN))(e))throw new Error("Invalid derivation path");const{key:r,chainCode:s}=(e=>{const t=_.hmac.create(b.sha512,"ed25519 seed").update((0,w.hexToBytes)(e)).digest();return{key:t.slice(0,32),chainCode:t.slice(32)}})(t);return e.split("/").slice(1).map(E).map(e=>parseInt(e,10)).reduce((e,t)=>(({key:e,chainCode:t},i)=>{const r=new ArrayBuffer(4);new DataView(r).setUint32(0,i);const s=new Uint8Array(r),n=new Uint8Array([0]),a=new Uint8Array([...n,...e,...s]),o=_.hmac.create(b.sha512,t).update(a).digest();return{key:o.slice(0,32),chainCode:o.slice(32)}})(e,t+i),{key:r,chainCode:s})},S=i(59),A=class{static fromBuffer(e){return A.fromUint8Array(e)}static fromUint8Array(e){return new A((0,S.bytesToHex)(e))}static ensure(e){return"string"===typeof e?new A(e):e}constructor(e){e.startsWith("0x")?this.hexString=e:this.hexString="0x"+e}hex(){return this.hexString}noPrefix(){return this.hexString.slice(2)}toString(){return this.hex()}toShortString(){return"0x"+this.hexString.replace(/^0x0*/,"")}toUint8Array(){return Uint8Array.from((0,S.hexToBytes)(this.noPrefix()))}};async function R(e){return new Promise(t=>{setTimeout(t,e)})}var z="0x1::aptos_coin::AptosCoin";function q(e){let t,i,r;return"object"===typeof e?(t=e.hashFunction,i=e.ttlMs,r=e.tags):t=e,(e,s,n)=>{if(null!=n.value)n.value=x(n.value,t,i,r);else{if(null==n.get)throw new Error("Only put a Memoize() decorator on a method or get accessor.");n.get=x(n.get,t,i,r)}}}var U=new Map;function x(e,t,i=0,r){const s=Symbol("__memoized_map__");return function(...n){let a;const o=this;o.hasOwnProperty(s)||Object.defineProperty(o,s,{configurable:!1,enumerable:!1,writable:!1,value:new Map});const c=o[s];if(Array.isArray(r))for(const e of r)U.has(e)?U.get(e).push(c):U.set(e,[c]);if(t||n.length>0||i>0){let r;r=!0===t?n.map(e=>e.toString()).join("!"):t?t.apply(o,n):n[0];const s=r+"__timestamp";let u=!1;if(i>0)if(c.has(s)){const e=c.get(s);u=Date.now()-e>i}else u=!0;c.has(r)&&!u?a=c.get(r):(a=e.apply(o,n),c.set(r,a),i>0&&c.set(s,Date.now()))}else{const t=o;c.has(t)?a=c.get(t):(a=e.apply(o,n),c.set(t,a))}return a}}async function B(e,t,i,r){var s;const n=[];let a;for(;;){const o=await e(A.ensure(t).hex(),null==(s=null==r?void 0:r.ledgerVersion)?void 0:s.toString(),a,i);if(a=o.__headers["x-aptos-cursor"],delete o.__headers,n.push(...o),null===a||void 0===a)break}return n}var C={};l(C,{AccountAddress:()=>ee,AccountAuthenticator:()=>pe,AccountAuthenticatorEd25519:()=>he,AccountAuthenticatorMultiEd25519:()=>ye,ArgumentABI:()=>Ze,AuthenticationKey:()=>it,ChainId:()=>De,ChangeSet:()=>Be,Ed25519PublicKey:()=>ie,Ed25519Signature:()=>se,EntryFunction:()=>qe,EntryFunctionABI:()=>Ye,Identifier:()=>ge,Module:()=>Ue,ModuleId:()=>xe,MultiAgentRawTransaction:()=>Me,MultiEd25519PublicKey:()=>ne,MultiEd25519Signature:()=>oe,RawTransaction:()=>Re,RawTransactionWithData:()=>Ie,RotationProofChallenge:()=>rt,Script:()=>ze,ScriptABI:()=>Xe,SignedTransaction:()=>ke,StructTag:()=>Ae,Transaction:()=>Ke,TransactionArgument:()=>He,TransactionArgumentAddress:()=>Le,TransactionArgumentBool:()=>Ge,TransactionArgumentU128:()=>We,TransactionArgumentU64:()=>Oe,TransactionArgumentU8:()=>$e,TransactionArgumentU8Vector:()=>Ve,TransactionAuthenticator:()=>ce,TransactionAuthenticatorEd25519:()=>ue,TransactionAuthenticatorMultiAgent:()=>de,TransactionAuthenticatorMultiEd25519:()=>le,TransactionPayload:()=>Pe,TransactionPayloadEntryFunction:()=>Ne,TransactionPayloadScript:()=>Fe,TransactionScriptABI:()=>Qe,TypeArgumentABI:()=>Je,TypeTag:()=>fe,TypeTagAddress:()=>ve,TypeTagBool:()=>me,TypeTagSigner:()=>Ee,TypeTagStruct:()=>Se,TypeTagU128:()=>we,TypeTagU64:()=>be,TypeTagU8:()=>_e,TypeTagVector:()=>Te,UserTransaction:()=>je,WriteSet:()=>Ce});var k={};l(k,{Deserializer:()=>N,Serializer:()=>P,bcsSerializeBool:()=>j,bcsSerializeBytes:()=>Z,bcsSerializeFixedBytes:()=>X,bcsSerializeStr:()=>J,bcsSerializeU128:()=>K,bcsSerializeU16:()=>V,bcsSerializeU32:()=>G,bcsSerializeU8:()=>L,bcsSerializeUint64:()=>W,bcsToBytes:()=>O,deserializeVector:()=>$,serializeVector:()=>D,serializeVectorWithFunc:()=>H});var I=BigInt(2**64)-BigInt(1),M=BigInt(2**128)-BigInt(1),P=class{constructor(){this.buffer=new ArrayBuffer(64),this.offset=0}ensureBufferWillHandleSize(e){for(;this.buffer.byteLength<this.offset+e;){const e=new ArrayBuffer(2*this.buffer.byteLength);new Uint8Array(e).set(new Uint8Array(this.buffer)),this.buffer=e}}serialize(e){this.ensureBufferWillHandleSize(e.length),new Uint8Array(this.buffer,this.offset).set(e),this.offset+=e.length}serializeWithFunction(e,t,i){this.ensureBufferWillHandleSize(t);const r=new DataView(this.buffer,this.offset);e.apply(r,[0,i,!0]),this.offset+=t}serializeStr(e){const t=new TextEncoder;this.serializeBytes(t.encode(e))}serializeBytes(e){this.serializeU32AsUleb128(e.length),this.serialize(e)}serializeFixedBytes(e){this.serialize(e)}serializeBool(e){if("boolean"!==typeof e)throw new Error("Value needs to be a boolean");const t=e?1:0;this.serialize(new Uint8Array([t]))}serializeU8(e){this.serialize(new Uint8Array([e]))}serializeU16(e){this.serializeWithFunction(DataView.prototype.setUint16,2,e)}serializeU32(e){this.serializeWithFunction(DataView.prototype.setUint32,4,e)}serializeU64(e){const t=BigInt(e.toString())&BigInt(2**32-1),i=BigInt(e.toString())>>BigInt(32);this.serializeU32(Number(t)),this.serializeU32(Number(i))}serializeU128(e){const t=BigInt(e.toString())&I,i=BigInt(e.toString())>>BigInt(64);this.serializeU64(t),this.serializeU64(i)}serializeU32AsUleb128(e){let t=e;const i=[];for(;t>>>7!==0;)i.push(127&t|128),t>>>=7;i.push(t),this.serialize(new Uint8Array(i))}getBytes(){return new Uint8Array(this.buffer).slice(0,this.offset)}};function F(e,t,i){return(r,s,n)=>{const a=n.value;return n.value=function(r){const s=BigInt(r.toString());if(s>BigInt(t.toString())||s<BigInt(e.toString()))throw new Error(i||"Value is out of range");a.apply(this,[r])},n}}h([F(0,255)],P.prototype,"serializeU8",1),h([F(0,65535)],P.prototype,"serializeU16",1),h([F(0,2**32-1)],P.prototype,"serializeU32",1),h([F(BigInt(0),I)],P.prototype,"serializeU64",1),h([F(BigInt(0),M)],P.prototype,"serializeU128",1),h([F(0,2**32-1)],P.prototype,"serializeU32AsUleb128",1);var N=class{constructor(e){this.buffer=new ArrayBuffer(e.length),new Uint8Array(this.buffer).set(e,0),this.offset=0}read(e){if(this.offset+e>this.buffer.byteLength)throw new Error("Reached to the end of buffer");const t=this.buffer.slice(this.offset,this.offset+e);return this.offset+=e,t}deserializeStr(){const e=this.deserializeBytes();return(new TextDecoder).decode(e)}deserializeBytes(){const e=this.deserializeUleb128AsU32();return new Uint8Array(this.read(e))}deserializeFixedBytes(e){return new Uint8Array(this.read(e))}deserializeBool(){const e=new Uint8Array(this.read(1))[0];if(1!==e&&0!==e)throw new Error("Invalid boolean value");return 1===e}deserializeU8(){return new DataView(this.read(1)).getUint8(0)}deserializeU16(){return new DataView(this.read(2)).getUint16(0,!0)}deserializeU32(){return new DataView(this.read(4)).getUint32(0,!0)}deserializeU64(){const e=this.deserializeU32(),t=this.deserializeU32();return BigInt(BigInt(t)<<BigInt(32)|BigInt(e))}deserializeU128(){const e=this.deserializeU64(),t=this.deserializeU64();return BigInt(t<<BigInt(64)|e)}deserializeUleb128AsU32(){let e=BigInt(0),t=0;for(;e<2**32-1;){const i=this.deserializeU8();if(e|=BigInt(127&i)<<BigInt(t),0===(128&i))break;t+=7}if(e>2**32-1)throw new Error("Overflow while parsing uleb128-encoded uint32 value");return Number(e)}};function D(e,t){t.serializeU32AsUleb128(e.length),e.forEach(e=>{e.serialize(t)})}function H(e,t){const i=new P;i.serializeU32AsUleb128(e.length);const r=i[t];return e.forEach(e=>{r.call(i,e)}),i.getBytes()}function $(e,t){const i=e.deserializeUleb128AsU32(),r=[];for(let s=0;s<i;s+=1)r.push(t.deserialize(e));return r}function O(e){const t=new P;return e.serialize(t),t.getBytes()}function W(e){const t=new P;return t.serializeU64(e),t.getBytes()}function L(e){const t=new P;return t.serializeU8(e),t.getBytes()}function V(e){const t=new P;return t.serializeU16(e),t.getBytes()}function G(e){const t=new P;return t.serializeU32(e),t.getBytes()}function K(e){const t=new P;return t.serializeU128(e),t.getBytes()}function j(e){const t=new P;return t.serializeBool(e),t.getBytes()}function J(e){const t=new P;return t.serializeStr(e),t.getBytes()}function Z(e){const t=new P;return t.serializeBytes(e),t.getBytes()}function X(e){const t=new P;return t.serializeFixedBytes(e),t.getBytes()}var Q=i(965),Y=class{constructor(e){if(e.length!==Y.LENGTH)throw new Error("Expected address of length 32");this.address=e}static fromHex(e){let t=A.ensure(e);t.noPrefix().length%2!==0&&(t=new A("0"+t.noPrefix()));const i=t.toUint8Array();if(i.length>Y.LENGTH)throw new Error("Hex string is too long. Address's length is 32 bytes.");if(i.length===Y.LENGTH)return new Y(i);const r=new Uint8Array(Y.LENGTH);return r.set(i,Y.LENGTH-i.length),new Y(r)}serialize(e){e.serializeFixedBytes(this.address)}static deserialize(e){return new Y(e.deserializeFixedBytes(Y.LENGTH))}},ee=Y;ee.LENGTH=32,ee.CORE_CODE_ADDRESS=Y.fromHex("0x1");var te=class{constructor(e){if(e.length!==te.LENGTH)throw new Error("Ed25519PublicKey length should be "+te.LENGTH);this.value=e}toBytes(){return this.value}serialize(e){e.serializeBytes(this.value)}static deserialize(e){const t=e.deserializeBytes();return new te(t)}},ie=te;ie.LENGTH=32;var re=class{constructor(e){if(this.value=e,e.length!==re.LENGTH)throw new Error("Ed25519Signature length should be "+re.LENGTH)}serialize(e){e.serializeBytes(this.value)}static deserialize(e){const t=e.deserializeBytes();return new re(t)}},se=re;se.LENGTH=64;var ne=class{constructor(e,t){if(this.public_keys=e,this.threshold=t,t>32)throw new Error('"threshold" cannot be larger than 32')}toBytes(){const e=new Uint8Array(this.public_keys.length*ie.LENGTH+1);return this.public_keys.forEach((t,i)=>{e.set(t.value,i*ie.LENGTH)}),e[this.public_keys.length*ie.LENGTH]=this.threshold,e}serialize(e){e.serializeBytes(this.toBytes())}static deserialize(e){const t=e.deserializeBytes(),i=t[t.length-1],r=[];for(let s=0;s<t.length-1;s+=ie.LENGTH){const e=s;r.push(new ie(t.subarray(e,e+ie.LENGTH)))}return new ne(r,i)}},ae=class{constructor(e,t){if(this.signatures=e,this.bitmap=t,t.length!==ae.BITMAP_LEN)throw new Error('"bitmap" length should be '+ae.BITMAP_LEN)}toBytes(){const e=new Uint8Array(this.signatures.length*se.LENGTH+ae.BITMAP_LEN);return this.signatures.forEach((t,i)=>{e.set(t.value,i*se.LENGTH)}),e.set(this.bitmap,this.signatures.length*se.LENGTH),e}static createBitmap(e){const t=new Uint8Array([0,0,0,0]),i=new Set;return e.forEach(e=>{if(e>=32)throw new Error(`Invalid bit value ${e}.`);if(i.has(e))throw new Error("Duplicated bits detected.");i.add(e);const r=Math.floor(e/8);let s=t[r];s|=128>>e%8,t[r]=s}),t}serialize(e){e.serializeBytes(this.toBytes())}static deserialize(e){const t=e.deserializeBytes(),i=t.subarray(t.length-4),r=[];for(let s=0;s<t.length-i.length;s+=se.LENGTH){const e=s;r.push(new se(t.subarray(e,e+se.LENGTH)))}return new ae(r,i)}},oe=ae;oe.BITMAP_LEN=4;var ce=class{static deserialize(e){const t=e.deserializeUleb128AsU32();switch(t){case 0:return ue.load(e);case 1:return le.load(e);case 2:return de.load(e);default:throw new Error("Unknown variant index for TransactionAuthenticator: "+t)}}},ue=class extends ce{constructor(e,t){super(),this.public_key=e,this.signature=t}serialize(e){e.serializeU32AsUleb128(0),this.public_key.serialize(e),this.signature.serialize(e)}static load(e){const t=ie.deserialize(e),i=se.deserialize(e);return new ue(t,i)}},le=class extends ce{constructor(e,t){super(),this.public_key=e,this.signature=t}serialize(e){e.serializeU32AsUleb128(1),this.public_key.serialize(e),this.signature.serialize(e)}static load(e){const t=ne.deserialize(e),i=oe.deserialize(e);return new le(t,i)}},de=class extends ce{constructor(e,t,i){super(),this.sender=e,this.secondary_signer_addresses=t,this.secondary_signers=i}serialize(e){e.serializeU32AsUleb128(2),this.sender.serialize(e),D(this.secondary_signer_addresses,e),D(this.secondary_signers,e)}static load(e){const t=pe.deserialize(e),i=$(e,ee),r=$(e,pe);return new de(t,i,r)}},pe=class{static deserialize(e){const t=e.deserializeUleb128AsU32();switch(t){case 0:return he.load(e);case 1:return ye.load(e);default:throw new Error("Unknown variant index for AccountAuthenticator: "+t)}}},he=class extends pe{constructor(e,t){super(),this.public_key=e,this.signature=t}serialize(e){e.serializeU32AsUleb128(0),this.public_key.serialize(e),this.signature.serialize(e)}static load(e){const t=ie.deserialize(e),i=se.deserialize(e);return new he(t,i)}},ye=class extends pe{constructor(e,t){super(),this.public_key=e,this.signature=t}serialize(e){e.serializeU32AsUleb128(1),this.public_key.serialize(e),this.signature.serialize(e)}static load(e){const t=ne.deserialize(e),i=oe.deserialize(e);return new ye(t,i)}},ge=class{constructor(e){this.value=e}serialize(e){e.serializeStr(this.value)}static deserialize(e){const t=e.deserializeStr();return new ge(t)}},fe=class{static deserialize(e){const t=e.deserializeUleb128AsU32();switch(t){case 0:return me.load(e);case 1:return _e.load(e);case 2:return be.load(e);case 3:return we.load(e);case 4:return ve.load(e);case 5:return Ee.load(e);case 6:return Te.load(e);case 7:return Se.load(e);default:throw new Error("Unknown variant index for TypeTag: "+t)}}},me=class extends fe{serialize(e){e.serializeU32AsUleb128(0)}static load(e){return new me}},_e=class extends fe{serialize(e){e.serializeU32AsUleb128(1)}static load(e){return new _e}},be=class extends fe{serialize(e){e.serializeU32AsUleb128(2)}static load(e){return new be}},we=class extends fe{serialize(e){e.serializeU32AsUleb128(3)}static load(e){return new we}},ve=class extends fe{serialize(e){e.serializeU32AsUleb128(4)}static load(e){return new ve}},Ee=class extends fe{serialize(e){e.serializeU32AsUleb128(5)}static load(e){return new Ee}},Te=class extends fe{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(6),this.value.serialize(e)}static load(e){const t=fe.deserialize(e);return new Te(t)}},Se=class extends fe{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(7),this.value.serialize(e)}static load(e){const t=Ae.deserialize(e);return new Se(t)}isStringTypeTag(){return"string"===this.value.module_name.value&&"String"===this.value.name.value&&this.value.address===ee.fromHex("0x1")}},Ae=class{constructor(e,t,i,r){this.address=e,this.module_name=t,this.name=i,this.type_args=r}static fromString(e){if(e.includes("<"))throw new Error("Not implemented");const t=e.split("::");if(3!==t.length)throw new Error("Invalid struct tag string literal.");return new Ae(ee.fromHex(t[0]),new ge(t[1]),new ge(t[2]),[])}serialize(e){this.address.serialize(e),this.module_name.serialize(e),this.name.serialize(e),D(this.type_args,e)}static deserialize(e){const t=ee.deserialize(e),i=ge.deserialize(e),r=ge.deserialize(e),s=$(e,fe);return new Ae(t,i,r,s)}},Re=class{constructor(e,t,i,r,s,n,a){this.sender=e,this.sequence_number=t,this.payload=i,this.max_gas_amount=r,this.gas_unit_price=s,this.expiration_timestamp_secs=n,this.chain_id=a}serialize(e){this.sender.serialize(e),e.serializeU64(this.sequence_number),this.payload.serialize(e),e.serializeU64(this.max_gas_amount),e.serializeU64(this.gas_unit_price),e.serializeU64(this.expiration_timestamp_secs),this.chain_id.serialize(e)}static deserialize(e){const t=ee.deserialize(e),i=e.deserializeU64(),r=Pe.deserialize(e),s=e.deserializeU64(),n=e.deserializeU64(),a=e.deserializeU64(),o=De.deserialize(e);return new Re(t,i,r,s,n,a,o)}},ze=class{constructor(e,t,i){this.code=e,this.ty_args=t,this.args=i}serialize(e){e.serializeBytes(this.code),D(this.ty_args,e),D(this.args,e)}static deserialize(e){const t=e.deserializeBytes(),i=$(e,fe),r=$(e,He);return new ze(t,i,r)}},qe=class{constructor(e,t,i,r){this.module_name=e,this.function_name=t,this.ty_args=i,this.args=r}static natural(e,t,i,r){return new qe(xe.fromStr(e),new ge(t),i,r)}static natual(e,t,i,r){return qe.natural(e,t,i,r)}serialize(e){this.module_name.serialize(e),this.function_name.serialize(e),D(this.ty_args,e),e.serializeU32AsUleb128(this.args.length),this.args.forEach(t=>{e.serializeBytes(t)})}static deserialize(e){const t=xe.deserialize(e),i=ge.deserialize(e),r=$(e,fe),s=e.deserializeUleb128AsU32(),n=[];for(let a=0;a<s;a+=1)n.push(e.deserializeBytes());return new qe(t,i,r,n)}},Ue=class{constructor(e){this.code=e}serialize(e){e.serializeBytes(this.code)}static deserialize(e){const t=e.deserializeBytes();return new Ue(t)}},xe=class{constructor(e,t){this.address=e,this.name=t}static fromStr(e){const t=e.split("::");if(2!==t.length)throw new Error("Invalid module id.");return new xe(ee.fromHex(new A(t[0])),new ge(t[1]))}serialize(e){this.address.serialize(e),this.name.serialize(e)}static deserialize(e){const t=ee.deserialize(e),i=ge.deserialize(e);return new xe(t,i)}},Be=class{serialize(e){throw new Error("Not implemented.")}static deserialize(e){throw new Error("Not implemented.")}},Ce=class{serialize(e){throw new Error("Not implmented.")}static deserialize(e){throw new Error("Not implmented.")}},ke=class{constructor(e,t){this.raw_txn=e,this.authenticator=t}serialize(e){this.raw_txn.serialize(e),this.authenticator.serialize(e)}static deserialize(e){const t=Re.deserialize(e),i=ce.deserialize(e);return new ke(t,i)}},Ie=class{static deserialize(e){const t=e.deserializeUleb128AsU32();switch(t){case 0:return Me.load(e);default:throw new Error("Unknown variant index for RawTransactionWithData: "+t)}}},Me=class extends Ie{constructor(e,t){super(),this.raw_txn=e,this.secondary_signer_addresses=t}serialize(e){e.serializeU32AsUleb128(0),this.raw_txn.serialize(e),D(this.secondary_signer_addresses,e)}static load(e){const t=Re.deserialize(e),i=$(e,ee);return new Me(t,i)}},Pe=class{static deserialize(e){const t=e.deserializeUleb128AsU32();switch(t){case 0:return Fe.load(e);case 2:return Ne.load(e);default:throw new Error("Unknown variant index for TransactionPayload: "+t)}}},Fe=class extends Pe{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(0),this.value.serialize(e)}static load(e){const t=ze.deserialize(e);return new Fe(t)}},Ne=class extends Pe{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(2),this.value.serialize(e)}static load(e){const t=qe.deserialize(e);return new Ne(t)}},De=class{constructor(e){this.value=e}serialize(e){e.serializeU8(this.value)}static deserialize(e){const t=e.deserializeU8();return new De(t)}},He=class{static deserialize(e){const t=e.deserializeUleb128AsU32();switch(t){case 0:return $e.load(e);case 1:return Oe.load(e);case 2:return We.load(e);case 3:return Le.load(e);case 4:return Ve.load(e);case 5:return Ge.load(e);default:throw new Error("Unknown variant index for TransactionArgument: "+t)}}},$e=class extends He{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(0),e.serializeU8(this.value)}static load(e){const t=e.deserializeU8();return new $e(t)}},Oe=class extends He{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(1),e.serializeU64(this.value)}static load(e){const t=e.deserializeU64();return new Oe(t)}},We=class extends He{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(2),e.serializeU128(this.value)}static load(e){const t=e.deserializeU128();return new We(t)}},Le=class extends He{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(3),this.value.serialize(e)}static load(e){const t=ee.deserialize(e);return new Le(t)}},Ve=class extends He{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(4),e.serializeBytes(this.value)}static load(e){const t=e.deserializeBytes();return new Ve(t)}},Ge=class extends He{constructor(e){super(),this.value=e}serialize(e){e.serializeU32AsUleb128(5),e.serializeBool(this.value)}static load(e){const t=e.deserializeBool();return new Ge(t)}},Ke=class{getHashSalt(){const e=Q.sha3_256.create();return e.update("APTOS::Transaction"),e.digest()}static deserialize(e){const t=e.deserializeUleb128AsU32();switch(t){case 0:return je.load(e);default:throw new Error("Unknown variant index for Transaction: "+t)}}},je=class extends Ke{constructor(e){super(),this.value=e}hash(){const e=Q.sha3_256.create();return e.update(this.getHashSalt()),e.update(O(this)),e.digest()}serialize(e){e.serializeU32AsUleb128(0),this.value.serialize(e)}static load(e){return new je(ke.deserialize(e))}},Je=class{constructor(e){this.name=e}serialize(e){e.serializeStr(this.name)}static deserialize(e){const t=e.deserializeStr();return new Je(t)}},Ze=class{constructor(e,t){this.name=e,this.type_tag=t}serialize(e){e.serializeStr(this.name),this.type_tag.serialize(e)}static deserialize(e){const t=e.deserializeStr(),i=fe.deserialize(e);return new Ze(t,i)}},Xe=class{static deserialize(e){const t=e.deserializeUleb128AsU32();switch(t){case 0:return Qe.load(e);case 1:return Ye.load(e);default:throw new Error("Unknown variant index for TransactionPayload: "+t)}}},Qe=class extends Xe{constructor(e,t,i,r,s){super(),this.name=e,this.doc=t,this.code=i,this.ty_args=r,this.args=s}serialize(e){e.serializeU32AsUleb128(0),e.serializeStr(this.name),e.serializeStr(this.doc),e.serializeBytes(this.code),D(this.ty_args,e),D(this.args,e)}static load(e){const t=e.deserializeStr(),i=e.deserializeStr(),r=e.deserializeBytes(),s=$(e,Je),n=$(e,Ze);return new Qe(t,i,r,s,n)}},Ye=class extends Xe{constructor(e,t,i,r,s){super(),this.name=e,this.module_name=t,this.doc=i,this.ty_args=r,this.args=s}serialize(e){e.serializeU32AsUleb128(1),e.serializeStr(this.name),this.module_name.serialize(e),e.serializeStr(this.doc),D(this.ty_args,e),D(this.args,e)}static load(e){const t=e.deserializeStr(),i=xe.deserialize(e),r=e.deserializeStr(),s=$(e,Je),n=$(e,Ze);return new Ye(t,i,r,s,n)}},et=i(965),tt=class{constructor(e){if(e.length!==tt.LENGTH)throw new Error("Expected a byte array of length 32");this.bytes=e}static fromMultiEd25519PublicKey(e){const t=e.toBytes(),i=new Uint8Array(t.length+1);i.set(t),i.set([tt.MULTI_ED25519_SCHEME],t.length);const r=et.sha3_256.create();return r.update(i),new tt(r.digest())}static fromEd25519PublicKey(e){const t=e.value,i=new Uint8Array(t.length+1);i.set(t),i.set([tt.ED25519_SCHEME],t.length);const r=et.sha3_256.create();return r.update(i),new tt(r.digest())}derivedAddress(){return A.fromUint8Array(this.bytes)}},it=tt;it.LENGTH=32,it.MULTI_ED25519_SCHEME=1,it.ED25519_SCHEME=0;var rt=class{constructor(e,t,i,r,s,n,a){this.accountAddress=e,this.moduleName=t,this.structName=i,this.sequenceNumber=r,this.originator=s,this.currentAuthKey=n,this.newPublicKey=a}serialize(e){this.accountAddress.serialize(e),e.serializeStr(this.moduleName),e.serializeStr(this.structName),e.serializeU64(this.sequenceNumber),this.originator.serialize(e),this.currentAuthKey.serialize(e),e.serializeBytes(this.newPublicKey)}},st=class{static fromAptosAccountObject(e){return new st(A.ensure(e.privateKeyHex).toUint8Array(),e.address)}static fromDerivePath(e,t){if(!st.isValidPath(e))throw new Error("Invalid derivation path");const i=t.trim().split(/\s+/).map(e=>e.toLowerCase()).join(" "),{key:r}=T(e,(0,m.bytesToHex)(f.mnemonicToSeedSync(i)));return new st(r)}constructor(e,t){this.signingKey=e?g.default.sign.keyPair.fromSeed(e.slice(0,32)):g.default.sign.keyPair(),this.accountAddress=A.ensure(t||this.authKey().hex())}address(){return this.accountAddress}authKey(){const e=new ie(this.signingKey.publicKey);return it.fromEd25519PublicKey(e).derivedAddress()}pubKey(){return A.fromUint8Array(this.signingKey.publicKey)}signBuffer(e){const t=g.default.sign(e,this.signingKey.secretKey);return A.fromUint8Array(t.slice(0,64))}signHexString(e){const t=A.ensure(e).toUint8Array();return this.signBuffer(t)}toPrivateKeyObject(){return{address:this.address().hex(),publicKeyHex:this.pubKey().hex(),privateKeyHex:A.fromUint8Array(this.signingKey.secretKey.slice(0,32)).hex()}}},nt=st;nt.isValidPath=e=>!!/^m\/44'\/637'\/[0-9]+'\/[0-9]+'\/[0-9]+'+$/.test(e),h([q()],nt.prototype,"authKey",1);var at={};l(at,{$AccountData:()=>Mt,$AccountSignature:()=>Pt,$AccountSignature_Ed25519Signature:()=>Ft,$AccountSignature_MultiEd25519Signature:()=>Nt,$Address:()=>Dt,$AptosError:()=>Ht,$AptosErrorCode:()=>$t,$Block:()=>Ot,$BlockMetadataTransaction:()=>Wt,$DecodedTableData:()=>Lt,$DeleteModule:()=>Gt,$DeleteResource:()=>Kt,$DeleteTableItem:()=>jt,$DeletedTableData:()=>Vt,$DirectWriteSet:()=>Jt,$Ed25519Signature:()=>Zt,$EncodeSubmissionRequest:()=>Xt,$EntryFunctionId:()=>Qt,$EntryFunctionPayload:()=>Yt,$Event:()=>ei,$EventGuid:()=>ti,$GasEstimation:()=>ii,$GenesisPayload:()=>ri,$GenesisPayload_WriteSetPayload:()=>si,$GenesisTransaction:()=>ni,$HashValue:()=>ai,$HealthCheckSuccess:()=>oi,$HexEncodedBytes:()=>ci,$IdentifierWrapper:()=>ui,$IndexResponse:()=>li,$ModuleBundlePayload:()=>di,$MoveAbility:()=>pi,$MoveFunction:()=>hi,$MoveFunctionGenericTypeParam:()=>yi,$MoveFunctionVisibility:()=>gi,$MoveModule:()=>fi,$MoveModuleBytecode:()=>mi,$MoveModuleId:()=>_i,$MoveResource:()=>bi,$MoveScriptBytecode:()=>wi,$MoveStruct:()=>vi,$MoveStructField:()=>Ei,$MoveStructGenericTypeParam:()=>Ti,$MoveStructTag:()=>Si,$MoveStructValue:()=>Ai,$MoveType:()=>Ri,$MoveValue:()=>zi,$MultiAgentSignature:()=>qi,$MultiEd25519Signature:()=>Ui,$PendingTransaction:()=>xi,$RawTableItemRequest:()=>Bi,$RoleType:()=>Ci,$ScriptPayload:()=>ki,$ScriptWriteSet:()=>Ii,$StateCheckpointTransaction:()=>Mi,$StateKeyWrapper:()=>Pi,$SubmitTransactionRequest:()=>Fi,$TableItemRequest:()=>Ni,$Transaction:()=>Di,$TransactionPayload:()=>Vi,$TransactionPayload_EntryFunctionPayload:()=>Gi,$TransactionPayload_ModuleBundlePayload:()=>Ki,$TransactionPayload_ScriptPayload:()=>ji,$TransactionSignature:()=>Xi,$TransactionSignature_Ed25519Signature:()=>Qi,$TransactionSignature_MultiAgentSignature:()=>Yi,$TransactionSignature_MultiEd25519Signature:()=>er,$Transaction_BlockMetadataTransaction:()=>Hi,$Transaction_GenesisTransaction:()=>$i,$Transaction_PendingTransaction:()=>Oi,$Transaction_StateCheckpointTransaction:()=>Wi,$Transaction_UserTransaction:()=>Li,$TransactionsBatchSingleSubmissionFailure:()=>Ji,$TransactionsBatchSubmissionResult:()=>Zi,$U128:()=>tr,$U64:()=>ir,$UserTransaction:()=>rr,$VersionedEvent:()=>sr,$WriteModule:()=>nr,$WriteResource:()=>ar,$WriteSet:()=>or,$WriteSetChange:()=>lr,$WriteSetChange_DeleteModule:()=>dr,$WriteSetChange_DeleteResource:()=>pr,$WriteSetChange_DeleteTableItem:()=>hr,$WriteSetChange_WriteModule:()=>yr,$WriteSetChange_WriteResource:()=>gr,$WriteSetChange_WriteTableItem:()=>fr,$WriteSetPayload:()=>mr,$WriteSet_DirectWriteSet:()=>cr,$WriteSet_ScriptWriteSet:()=>ur,$WriteTableItem:()=>_r,AccountsService:()=>St,ApiError:()=>lt,AptosErrorCode:()=>Ct,AptosGeneratedClient:()=>xt,BaseHttpRequest:()=>ot,BlocksService:()=>At,CancelError:()=>dt,CancelablePromise:()=>pt,EventsService:()=>Rt,GeneralService:()=>zt,MoveFunctionVisibility:()=>kt,OpenAPI:()=>Bt,RoleType:()=>It,TablesService:()=>qt,TransactionsService:()=>Ut});var ot=class{constructor(e){this.config=e}},ct=p(i(78)),ut=p(i(2821)),lt=class extends Error{constructor(e,t,i){super(i),this.name="ApiError",this.url=t.url,this.status=t.status,this.statusText=t.statusText,this.body=t.body,this.request=e}},dt=class extends Error{constructor(e){super(e),this.name="CancelError"}get isCancelled(){return!0}},pt=class{constructor(e){this._isResolved=!1,this._isRejected=!1,this._isCancelled=!1,this._cancelHandlers=[],this._promise=new Promise((t,i)=>{this._resolve=t,this._reject=i;const r=e=>{this._isResolved||this._isRejected||this._isCancelled||this._cancelHandlers.push(e)};return Object.defineProperty(r,"isResolved",{get:()=>this._isResolved}),Object.defineProperty(r,"isRejected",{get:()=>this._isRejected}),Object.defineProperty(r,"isCancelled",{get:()=>this._isCancelled}),e(e=>{var t;this._isResolved||this._isRejected||this._isCancelled||(this._isResolved=!0,null==(t=this._resolve)||t.call(this,e))},e=>{var t;this._isResolved||this._isRejected||this._isCancelled||(this._isRejected=!0,null==(t=this._reject)||t.call(this,e))},r)})}then(e,t){return this._promise.then(e,t)}catch(e){return this._promise.catch(e)}finally(e){return this._promise.finally(e)}cancel(){var e;if(!(this._isResolved||this._isRejected||this._isCancelled)){if(this._isCancelled=!0,this._cancelHandlers.length)try{for(const e of this._cancelHandlers)e()}catch(t){return}this._cancelHandlers.length=0,null==(e=this._reject)||e.call(this,new dt("Request aborted"))}}get isCancelled(){return this._isCancelled}};Symbol.toStringTag;var ht=class{constructor(e=new Map){this.jar=e}setCookie(e,t){var i;const r=e.origin.toLowerCase();this.jar.has(r)||this.jar.set(r,[]);const s=ht.parse(t);this.jar.set(r,[...(null==(i=this.jar.get(r))?void 0:i.filter(e=>e.name!==s.name))||[],s])}getCookies(e){var t;const i=e.origin.toLowerCase();return this.jar.get(i)&&(null==(t=this.jar.get(i))?void 0:t.filter(e=>!e.expires||e.expires>new Date))||[]}static parse(e){if("string"!==typeof e)throw new Error("argument str must be a string");const t=e.split(";").map(e=>e.trim());let i;if(!(t.length>0))throw new Error("Invalid cookie");{const[e,r]=t[0].split("=");if(!e||!r)throw new Error("Invalid cookie");i={name:e,value:r}}return t.slice(1).forEach(e=>{const[t,r]=e.split("=");if(!t.trim())throw new Error("Invalid cookie");const s=t.toLowerCase(),n="'"===(null==r?void 0:r.charAt(0))||'"'===(null==r?void 0:r.charAt(0))?null==r?void 0:r.slice(1,-1):r;if("expires"===s&&(i.expires=new Date(n)),"path"===s&&(i.path=n),"samesite"===s){if("Lax"!==n&&"None"!==n&&"Strict"!==n)throw new Error("Invalid cookie SameSite value");i.sameSite=n}"secure"===s&&(i.secure=!0)}),i}},yt=new ht;ct.default.interceptors.response.use(e=>(Array.isArray(e.headers["set-cookie"])&&e.headers["set-cookie"].forEach(t=>{yt.setCookie(new URL(e.config.url),t)}),e)),ct.default.interceptors.request.use((function(e){const t=yt.getCookies(new URL(e.url));return(null==t?void 0:t.length)>0&&e.headers&&(e.headers.cookie=t.map(e=>`${e.name}=${e.value}`).join("; ")),e}));var gt=e=>void 0!==e&&null!==e,ft=e=>"string"===typeof e,mt=e=>ft(e)&&""!==e,_t=e=>"object"===typeof e&&"string"===typeof e.type&&"function"===typeof e.stream&&"function"===typeof e.arrayBuffer&&"function"===typeof e.constructor&&"string"===typeof e.constructor.name&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag]),bt=e=>{const t=[],i=(e,r)=>{gt(r)&&(Array.isArray(r)?r.forEach(t=>{i(e,t)}):"object"===typeof r?Object.entries(r).forEach(([t,r])=>{i(`${e}[${t}]`,r)}):((e,i)=>{t.push(`${encodeURIComponent(e)}=${encodeURIComponent(String(i))}`)})(e,r))};return Object.entries(e).forEach(([e,t])=>{i(e,t)}),t.length>0?"?"+t.join("&"):""},wt=async(e,t)=>"function"===typeof t?t(e):t,vt=async(e,t,i)=>{const r=await wt(t,e.TOKEN),s=await wt(t,e.USERNAME),n=await wt(t,e.PASSWORD),a=await wt(t,e.HEADERS),o="function"===typeof(null==i?void 0:i.getHeaders)&&(null==i?void 0:i.getHeaders())||{},c=Object.entries({Accept:"application/json",...a,...t.headers,...o}).filter(([e,t])=>gt(t)).reduce((e,[t,i])=>({...e,[t]:String(i)}),{});if(mt(r)&&(c.Authorization="Bearer "+r),mt(s)&&mt(n)){const e=btoa(`${s}:${n}`);c.Authorization="Basic "+e}return t.body&&(t.mediaType?c["Content-Type"]=t.mediaType:_t(t.body)?c["Content-Type"]=t.body.type||"application/octet-stream":ft(t.body)?c["Content-Type"]="text/plain":t.body instanceof ut.default||(c["Content-Type"]="application/json")),c},Et=(e,t)=>new pt(async(i,r,s)=>{try{const r=((e,t)=>{const i=e.ENCODE_PATH||encodeURI,r=t.url.replace("{api-version}",e.VERSION).replace(/{(.*?)}/g,(e,r)=>{var s;return(null==(s=t.path)?void 0:s.hasOwnProperty(r))?i(String(t.path[r])):e}),s=`${e.BASE}${r}`;return t.query?`${s}${bt(t.query)}`:s})(e,t),o=(e=>{if(e.formData){const t=new ut.default,i=(e,i)=>{ft(i)||_t(i)?t.append(e,i):t.append(e,JSON.stringify(i))};return Object.entries(e.formData).filter(([e,t])=>gt(t)).forEach(([e,t])=>{Array.isArray(t)?t.forEach(t=>i(e,t)):i(e,t)}),t}})(t),c=(e=>{if(e.body)return e.body})(t),u=await vt(e,t,o);if(!s.isCancelled){const l=await(async(e,t,i,r,s,n,a)=>{const o=ct.default.CancelToken.source(),c={url:i,headers:n,data:null!=r?r:s,method:t.method,withCredentials:e.WITH_CREDENTIALS,cancelToken:o.token};Object.keys(e.HEADERS||{}).filter(e=>"accept"===e.toLowerCase()).map(t=>e.HEADERS[t]).includes("application/x-bcs")&&(c.responseType="arraybuffer"),a(()=>o.cancel("The user aborted a request."));try{return await ct.default.request(c)}catch(u){const e=u;if(e.response)return e.response;throw u}})(e,t,r,c,o,u,s),d=(e=>{if(204!==e.status)return e.data})(l),p=((e,t)=>{if(t){const i=e.headers[t];if(ft(i))return i}})(l,t.responseHeader),h={url:r,ok:(n=l.status,n>=200&&n<300),status:l.status,statusText:l.statusText,body:null!=p?p:d};((e,t)=>{const i={400:"Bad Request",401:"Unauthorized",403:"Forbidden",404:"Not Found",500:"Internal Server Error",502:"Bad Gateway",503:"Service Unavailable",...e.errors}[t.status];if(i)throw new lt(e,t,i);if(!t.ok)throw new lt(e,t,"Generic Error")})(t,h);const y=h.body;try{y.__headers=l.headers}catch(a){}i(y)}}catch(o){r(o)}var n}),Tt=class extends ot{constructor(e){super(e)}request(e){return Et(this.config,e)}},St=class{constructor(e){this.httpRequest=e}getAccount(e,t){return this.httpRequest.request({method:"GET",url:"/accounts/{address}",path:{address:e},query:{ledger_version:t}})}getAccountResources(e,t,i,r){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/resources",path:{address:e},query:{ledger_version:t,start:i,limit:r}})}getAccountModules(e,t,i,r){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/modules",path:{address:e},query:{ledger_version:t,start:i,limit:r}})}getAccountResource(e,t,i){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/resource/{resource_type}",path:{address:e,resource_type:t},query:{ledger_version:i}})}getAccountModule(e,t,i){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/module/{module_name}",path:{address:e,module_name:t},query:{ledger_version:i}})}},At=class{constructor(e){this.httpRequest=e}getBlockByHeight(e,t){return this.httpRequest.request({method:"GET",url:"/blocks/by_height/{block_height}",path:{block_height:e},query:{with_transactions:t}})}getBlockByVersion(e,t){return this.httpRequest.request({method:"GET",url:"/blocks/by_version/{version}",path:{version:e},query:{with_transactions:t}})}},Rt=class{constructor(e){this.httpRequest=e}getEventsByCreationNumber(e,t,i,r){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/events/{creation_number}",path:{address:e,creation_number:t},query:{start:i,limit:r}})}getEventsByEventHandle(e,t,i,r,s){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/events/{event_handle}/{field_name}",path:{address:e,event_handle:t,field_name:i},query:{start:r,limit:s}})}},zt=class{constructor(e){this.httpRequest=e}spec(){return this.httpRequest.request({method:"GET",url:"/spec"})}healthy(e){return this.httpRequest.request({method:"GET",url:"/-/healthy",query:{duration_secs:e}})}getLedgerInfo(){return this.httpRequest.request({method:"GET",url:"/"})}},qt=class{constructor(e){this.httpRequest=e}getTableItem(e,t,i){return this.httpRequest.request({method:"POST",url:"/tables/{table_handle}/item",path:{table_handle:e},query:{ledger_version:i},body:t,mediaType:"application/json"})}getRawTableItem(e,t,i){return this.httpRequest.request({method:"POST",url:"/tables/{table_handle}/raw_item",path:{table_handle:e},query:{ledger_version:i},body:t,mediaType:"application/json"})}},Ut=class{constructor(e){this.httpRequest=e}getTransactions(e,t){return this.httpRequest.request({method:"GET",url:"/transactions",query:{start:e,limit:t}})}submitTransaction(e){return this.httpRequest.request({method:"POST",url:"/transactions",body:e,mediaType:"application/json"})}getTransactionByHash(e){return this.httpRequest.request({method:"GET",url:"/transactions/by_hash/{txn_hash}",path:{txn_hash:e}})}getTransactionByVersion(e){return this.httpRequest.request({method:"GET",url:"/transactions/by_version/{txn_version}",path:{txn_version:e}})}getAccountTransactions(e,t,i){return this.httpRequest.request({method:"GET",url:"/accounts/{address}/transactions",path:{address:e},query:{start:t,limit:i}})}submitBatchTransactions(e){return this.httpRequest.request({method:"POST",url:"/transactions/batch",body:e,mediaType:"application/json"})}simulateTransaction(e,t,i,r){return this.httpRequest.request({method:"POST",url:"/transactions/simulate",query:{estimate_max_gas_amount:t,estimate_gas_unit_price:i,estimate_prioritized_gas_unit_price:r},body:e,mediaType:"application/json"})}encodeSubmission(e){return this.httpRequest.request({method:"POST",url:"/transactions/encode_submission",body:e,mediaType:"application/json"})}estimateGasPrice(){return this.httpRequest.request({method:"GET",url:"/estimate_gas_price"})}},xt=class{constructor(e,t=Tt){var i,r,s,n;this.request=new t({BASE:null!=(i=null==e?void 0:e.BASE)?i:"/v1",VERSION:null!=(r=null==e?void 0:e.VERSION)?r:"1.2.0",WITH_CREDENTIALS:null!=(s=null==e?void 0:e.WITH_CREDENTIALS)&&s,CREDENTIALS:null!=(n=null==e?void 0:e.CREDENTIALS)?n:"include",TOKEN:null==e?void 0:e.TOKEN,USERNAME:null==e?void 0:e.USERNAME,PASSWORD:null==e?void 0:e.PASSWORD,HEADERS:null==e?void 0:e.HEADERS,ENCODE_PATH:null==e?void 0:e.ENCODE_PATH}),this.accounts=new St(this.request),this.blocks=new At(this.request),this.events=new Rt(this.request),this.general=new zt(this.request),this.tables=new qt(this.request),this.transactions=new Ut(this.request)}},Bt={BASE:"/v1",VERSION:"1.2.0",WITH_CREDENTIALS:!1,CREDENTIALS:"include",TOKEN:void 0,USERNAME:void 0,PASSWORD:void 0,HEADERS:void 0,ENCODE_PATH:void 0},Ct=(e=>(e.ACCOUNT_NOT_FOUND="account_not_found",e.RESOURCE_NOT_FOUND="resource_not_found",e.MODULE_NOT_FOUND="module_not_found",e.STRUCT_FIELD_NOT_FOUND="struct_field_not_found",e.VERSION_NOT_FOUND="version_not_found",e.TRANSACTION_NOT_FOUND="transaction_not_found",e.TABLE_ITEM_NOT_FOUND="table_item_not_found",e.BLOCK_NOT_FOUND="block_not_found",e.VERSION_PRUNED="version_pruned",e.BLOCK_PRUNED="block_pruned",e.INVALID_INPUT="invalid_input",e.INVALID_TRANSACTION_UPDATE="invalid_transaction_update",e.SEQUENCE_NUMBER_TOO_OLD="sequence_number_too_old",e.VM_ERROR="vm_error",e.HEALTH_CHECK_FAILED="health_check_failed",e.MEMPOOL_IS_FULL="mempool_is_full",e.INTERNAL_ERROR="internal_error",e.WEB_FRAMEWORK_ERROR="web_framework_error",e.BCS_NOT_SUPPORTED="bcs_not_supported",e.API_DISABLED="api_disabled",e))(Ct||{}),kt=(e=>(e.PRIVATE="private",e.PUBLIC="public",e.FRIEND="friend",e))(kt||{}),It=(e=>(e.VALIDATOR="validator",e.FULL_NODE="full_node",e))(It||{}),Mt={description:"Account data\n\n    A simplified version of the onchain Account resource",properties:{sequence_number:{type:"U64",isRequired:!0},authentication_key:{type:"HexEncodedBytes",isRequired:!0}}},Pt={type:"one-of",description:"Account signature scheme\n\n    The account signature scheme allows you to have two types of accounts:\n\n    1. A single Ed25519 key account, one private key\n    2. A k-of-n multi-Ed25519 key account, multiple private keys, such that k-of-n must sign a transaction.",contains:[{type:"AccountSignature_Ed25519Signature"},{type:"AccountSignature_MultiEd25519Signature"}]},Ft={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"Ed25519Signature"}]},Nt={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"MultiEd25519Signature"}]},Dt={type:"string",description:"A hex encoded 32 byte Aptos account address.\n\n    This is represented in a string as a 64 character hex string, sometimes\n    shortened by stripping leading 0s, and adding a 0x.\n\n    For example, address 0x0000000000000000000000000000000000000000000000000000000000000001 is represented as 0x1.\n    ",format:"hex"},Ht={description:"This is the generic struct we use for all API errors, it contains a string\n    message and an Aptos API specific error code.",properties:{message:{type:"string",description:"A message describing the error",isRequired:!0},error_code:{type:"AptosErrorCode",isRequired:!0},vm_error_code:{type:"number",description:"A code providing VM error details when submitting transactions to the VM",format:"uint64"}}},$t={type:"Enum"},Ot={description:"A Block with or without transactions\n\n    This contains the information about a transactions along with\n    associated transactions if requested",properties:{block_height:{type:"U64",isRequired:!0},block_hash:{type:"HashValue",isRequired:!0},block_timestamp:{type:"U64",isRequired:!0},first_version:{type:"U64",isRequired:!0},last_version:{type:"U64",isRequired:!0},transactions:{type:"array",contains:{type:"Transaction"}}}},Wt={description:"A block metadata transaction\n\n    This signifies the beginning of a block, and contains information\n    about the specific block",properties:{version:{type:"U64",isRequired:!0},hash:{type:"HashValue",isRequired:!0},state_change_hash:{type:"HashValue",isRequired:!0},event_root_hash:{type:"HashValue",isRequired:!0},state_checkpoint_hash:{type:"HashValue"},gas_used:{type:"U64",isRequired:!0},success:{type:"boolean",description:"Whether the transaction was successful",isRequired:!0},vm_status:{type:"string",description:"The VM status of the transaction, can tell useful information in a failure",isRequired:!0},accumulator_root_hash:{type:"HashValue",isRequired:!0},changes:{type:"array",contains:{type:"WriteSetChange"},isRequired:!0},id:{type:"HashValue",isRequired:!0},epoch:{type:"U64",isRequired:!0},round:{type:"U64",isRequired:!0},events:{type:"array",contains:{type:"Event"},isRequired:!0},previous_block_votes_bitvec:{type:"array",contains:{type:"number",format:"uint8"},isRequired:!0},proposer:{type:"Address",isRequired:!0},failed_proposer_indices:{type:"array",contains:{type:"number",format:"uint32"},isRequired:!0},timestamp:{type:"U64",isRequired:!0}}},Lt={description:"Decoded table data",properties:{key:{description:"Key of table in JSON",properties:{},isRequired:!0},key_type:{type:"string",description:"Type of key",isRequired:!0},value:{description:"Value of table in JSON",properties:{},isRequired:!0},value_type:{type:"string",description:"Type of value",isRequired:!0}}},Vt={description:"Deleted table data",properties:{key:{description:"Deleted key",properties:{},isRequired:!0},key_type:{type:"string",description:"Deleted key type",isRequired:!0}}},Gt={description:"Delete a module",properties:{address:{type:"Address",isRequired:!0},state_key_hash:{type:"string",description:"State key hash",isRequired:!0},module:{type:"MoveModuleId",isRequired:!0}}},Kt={description:"Delete a resource",properties:{address:{type:"Address",isRequired:!0},state_key_hash:{type:"string",description:"State key hash",isRequired:!0},resource:{type:"MoveStructTag",isRequired:!0}}},jt={description:"Delete a table item",properties:{state_key_hash:{type:"string",isRequired:!0},handle:{type:"HexEncodedBytes",isRequired:!0},key:{type:"HexEncodedBytes",isRequired:!0},data:{type:"DeletedTableData"}}},Jt={properties:{changes:{type:"array",contains:{type:"WriteSetChange"},isRequired:!0},events:{type:"array",contains:{type:"Event"},isRequired:!0}}},Zt={description:"A single Ed25519 signature",properties:{public_key:{type:"HexEncodedBytes",isRequired:!0},signature:{type:"HexEncodedBytes",isRequired:!0}}},Xt={description:"Request to encode a submission",properties:{sender:{type:"Address",isRequired:!0},sequence_number:{type:"U64",isRequired:!0},max_gas_amount:{type:"U64",isRequired:!0},gas_unit_price:{type:"U64",isRequired:!0},expiration_timestamp_secs:{type:"U64",isRequired:!0},payload:{type:"TransactionPayload",isRequired:!0},secondary_signers:{type:"array",contains:{type:"Address"}}}},Qt={type:"string",description:"Entry function id is string representation of a entry function defined on-chain.\n\n    Format: `{address}::{module name}::{function name}`\n\n    Both `module name` and `function name` are case-sensitive.\n    "},Yt={description:"Payload which runs a single entry function",properties:{function:{type:"EntryFunctionId",isRequired:!0},type_arguments:{type:"array",contains:{type:"MoveType"},isRequired:!0},arguments:{type:"array",contains:{properties:{}},isRequired:!0}}},ei={description:"An event from a transaction",properties:{guid:{type:"EventGuid",isRequired:!0},sequence_number:{type:"U64",isRequired:!0},type:{type:"MoveType",isRequired:!0},data:{description:"The JSON representation of the event",properties:{},isRequired:!0}}},ti={properties:{creation_number:{type:"U64",isRequired:!0},account_address:{type:"Address",isRequired:!0}}},ii={description:"Struct holding the outputs of the estimate gas API",properties:{deprioritized_gas_estimate:{type:"number",description:"The deprioritized estimate for the gas unit price",format:"uint64"},gas_estimate:{type:"number",description:"The current estimate for the gas unit price",isRequired:!0,format:"uint64"},prioritized_gas_estimate:{type:"number",description:"The prioritized estimate for the gas unit price",format:"uint64"}}},ri={type:"one-of",description:"The writeset payload of the Genesis transaction",contains:[{type:"GenesisPayload_WriteSetPayload"}]},si={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"WriteSetPayload"}]},ni={description:"The genesis transaction\n\n    This only occurs at the genesis transaction (version 0)",properties:{version:{type:"U64",isRequired:!0},hash:{type:"HashValue",isRequired:!0},state_change_hash:{type:"HashValue",isRequired:!0},event_root_hash:{type:"HashValue",isRequired:!0},state_checkpoint_hash:{type:"HashValue"},gas_used:{type:"U64",isRequired:!0},success:{type:"boolean",description:"Whether the transaction was successful",isRequired:!0},vm_status:{type:"string",description:"The VM status of the transaction, can tell useful information in a failure",isRequired:!0},accumulator_root_hash:{type:"HashValue",isRequired:!0},changes:{type:"array",contains:{type:"WriteSetChange"},isRequired:!0},payload:{type:"GenesisPayload",isRequired:!0},events:{type:"array",contains:{type:"Event"},isRequired:!0}}},ai={type:"string"},oi={description:"Representation of a successful healthcheck",properties:{message:{type:"string",isRequired:!0}}},ci={type:"string",description:"All bytes (Vec<u8>) data is represented as hex-encoded string prefixed with `0x` and fulfilled with\n    two hex digits per byte.\n\n    Unlike the `Address` type, HexEncodedBytes will not trim any zeros.\n    ",format:"hex"},ui={type:"string"},li={description:'The struct holding all data returned to the client by the\n    index endpoint (i.e., GET "/").  Only for responding in JSON',properties:{chain_id:{type:"number",description:"Chain ID of the current chain",isRequired:!0,format:"uint8"},epoch:{type:"U64",isRequired:!0},ledger_version:{type:"U64",isRequired:!0},oldest_ledger_version:{type:"U64",isRequired:!0},ledger_timestamp:{type:"U64",isRequired:!0},node_role:{type:"RoleType",isRequired:!0},oldest_block_height:{type:"U64",isRequired:!0},block_height:{type:"U64",isRequired:!0},git_hash:{type:"string"}}},di={properties:{modules:{type:"array",contains:{type:"MoveModuleBytecode"},isRequired:!0}}},pi={type:"string"},hi={description:"Move function",properties:{name:{type:"IdentifierWrapper",isRequired:!0},visibility:{type:"MoveFunctionVisibility",isRequired:!0},is_entry:{type:"boolean",description:"Whether the function can be called as an entry function directly in a transaction",isRequired:!0},generic_type_params:{type:"array",contains:{type:"MoveFunctionGenericTypeParam"},isRequired:!0},params:{type:"array",contains:{type:"MoveType"},isRequired:!0},return:{type:"array",contains:{type:"MoveType"},isRequired:!0}}},yi={description:"Move function generic type param",properties:{constraints:{type:"array",contains:{type:"MoveAbility"},isRequired:!0}}},gi={type:"Enum"},fi={description:"A Move module",properties:{address:{type:"Address",isRequired:!0},name:{type:"IdentifierWrapper",isRequired:!0},friends:{type:"array",contains:{type:"MoveModuleId"},isRequired:!0},exposed_functions:{type:"array",contains:{type:"MoveFunction"},isRequired:!0},structs:{type:"array",contains:{type:"MoveStruct"},isRequired:!0}}},mi={description:"Move module bytecode along with it's ABI",properties:{bytecode:{type:"HexEncodedBytes",isRequired:!0},abi:{type:"MoveModule"}}},_i={type:"string",description:"Move module id is a string representation of Move module.\n\n    Format: `{address}::{module name}`\n\n    `address` should be hex-encoded 32 byte account address that is prefixed with `0x`.\n\n    Module name is case-sensitive.\n    "},bi={description:"A parsed Move resource",properties:{type:{type:"MoveStructTag",isRequired:!0},data:{type:"MoveStructValue",isRequired:!0}}},wi={description:"Move script bytecode",properties:{bytecode:{type:"HexEncodedBytes",isRequired:!0},abi:{type:"MoveFunction"}}},vi={description:"A move struct",properties:{name:{type:"IdentifierWrapper",isRequired:!0},is_native:{type:"boolean",description:"Whether the struct is a native struct of Move",isRequired:!0},abilities:{type:"array",contains:{type:"MoveAbility"},isRequired:!0},generic_type_params:{type:"array",contains:{type:"MoveStructGenericTypeParam"},isRequired:!0},fields:{type:"array",contains:{type:"MoveStructField"},isRequired:!0}}},Ei={description:"Move struct field",properties:{name:{type:"IdentifierWrapper",isRequired:!0},type:{type:"MoveType",isRequired:!0}}},Ti={description:"Move generic type param",properties:{constraints:{type:"array",contains:{type:"MoveAbility"},isRequired:!0}}},Si={type:"string",description:"String representation of a MoveStructTag (on-chain Move struct type). This exists so you\n    can specify MoveStructTags as path / query parameters, e.g. for get_events_by_event_handle.\n\n    It is a combination of:\n    1. `move_module_address`, `module_name` and `struct_name`, all joined by `::`\n    2. `struct generic type parameters` joined by `, `\n\n    Examples:\n     * `0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>`\n     * `0x1::account::Account`\n\n    Note:\n    1. Empty chars should be ignored when comparing 2 struct tag ids.\n    2. When used in an URL path, should be encoded by url-encoding (AKA percent-encoding).\n\n    See [doc](https://aptos.dev/concepts/basics-accounts) for more details.\n    ",pattern:"^0x[0-9a-zA-Z:_<>]+$"},Ai={description:'This is a JSON representation of some data within an account resource. More specifically,\n    it is a map of strings to arbitrary JSON values / objects, where the keys are top level\n    fields within the given resource.\n\n    To clarify, you might query for 0x1::account::Account and see the example data.\n\n    Move `bool` type value is serialized into `boolean`.\n\n    Move `u8` type value is serialized into `integer`.\n\n    Move `u64` and `u128` type value is serialized into `string`.\n\n    Move `address` type value (32 byte Aptos account address) is serialized into a HexEncodedBytes string.\n    For example:\n    - `0x1`\n    - `0x1668f6be25668c1a17cd8caf6b8d2f25`\n\n    Move `vector` type value is serialized into `array`, except `vector<u8>` which is serialized into a\n    HexEncodedBytes string with `0x` prefix.\n    For example:\n    - `vector<u64>{255, 255}` => `["255", "255"]`\n    - `vector<u8>{255, 255}` => `0xffff`\n\n    Move `struct` type value is serialized into `object` that looks like this (except some Move stdlib types, see the following section):\n    ```json\n    {\n        field1_name: field1_value,\n        field2_name: field2_value,\n        ......\n    }\n    ```\n\n    For example:\n    `{ "created": "0xa550c18", "role_id": "0" }`\n\n     **Special serialization for Move stdlib types**:\n    - [0x1::string::String](https://github.com/aptos-labs/aptos-core/blob/main/language/move-stdlib/docs/ascii.md)\n    is serialized into `string`. For example, struct value `0x1::string::String{bytes: b"Hello World!"}`\n    is serialized as `"Hello World!"` in JSON.\n    ',properties:{}},Ri={type:"string",description:"String representation of an on-chain Move type tag that is exposed in transaction payload.\n    Values:\n    - bool\n    - u8\n    - u64\n    - u128\n    - address\n    - signer\n    - vector: `vector<{non-reference MoveTypeId}>`\n    - struct: `{address}::{module_name}::{struct_name}::<{generic types}>`\n\n    Vector type value examples:\n    - `vector<u8>`\n    - `vector<vector<u64>>`\n    - `vector<0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>>`\n\n    Struct type value examples:\n    - `0x1::coin::CoinStore<0x1::aptos_coin::AptosCoin>\n    - `0x1::account::Account`\n\n    Note:\n    1. Empty chars should be ignored when comparing 2 struct tag ids.\n    2. When used in an URL path, should be encoded by url-encoding (AKA percent-encoding).\n    ",pattern:"^(bool|u8|u64|u128|address|signer|vector<.+>|0x[0-9a-zA-Z:_<, >]+)$"},zi={type:"any-of",description:"An enum of the possible Move value types",contains:[{type:"number",format:"uint8"},{type:"U64"},{type:"U128"},{type:"boolean"},{type:"Address"},{type:"array",contains:{type:"MoveValue"}},{type:"HexEncodedBytes"},{type:"MoveStructValue"},{type:"string"}]},qi={description:"Multi agent signature for multi agent transactions\n\n    This allows you to have transactions across multiple accounts",properties:{sender:{type:"AccountSignature",isRequired:!0},secondary_signer_addresses:{type:"array",contains:{type:"Address"},isRequired:!0},secondary_signers:{type:"array",contains:{type:"AccountSignature"},isRequired:!0}}},Ui={description:"A Ed25519 multi-sig signature\n\n    This allows k-of-n signing for a transaction",properties:{public_keys:{type:"array",contains:{type:"HexEncodedBytes"},isRequired:!0},signatures:{type:"array",contains:{type:"HexEncodedBytes"},isRequired:!0},threshold:{type:"number",description:"The number of signatures required for a successful transaction",isRequired:!0,format:"uint8"},bitmap:{type:"HexEncodedBytes",isRequired:!0}}},xi={description:"A transaction waiting in mempool",properties:{hash:{type:"HashValue",isRequired:!0},sender:{type:"Address",isRequired:!0},sequence_number:{type:"U64",isRequired:!0},max_gas_amount:{type:"U64",isRequired:!0},gas_unit_price:{type:"U64",isRequired:!0},expiration_timestamp_secs:{type:"U64",isRequired:!0},payload:{type:"TransactionPayload",isRequired:!0},signature:{type:"TransactionSignature"}}},Bi={description:"Table Item request for the GetTableItemRaw API",properties:{key:{type:"HexEncodedBytes",isRequired:!0}}},Ci={type:"Enum"},ki={description:"Payload which runs a script that can run multiple functions",properties:{code:{type:"MoveScriptBytecode",isRequired:!0},type_arguments:{type:"array",contains:{type:"MoveType"},isRequired:!0},arguments:{type:"array",contains:{properties:{}},isRequired:!0}}},Ii={properties:{execute_as:{type:"Address",isRequired:!0},script:{type:"ScriptPayload",isRequired:!0}}},Mi={description:"A state checkpoint transaction",properties:{version:{type:"U64",isRequired:!0},hash:{type:"HashValue",isRequired:!0},state_change_hash:{type:"HashValue",isRequired:!0},event_root_hash:{type:"HashValue",isRequired:!0},state_checkpoint_hash:{type:"HashValue"},gas_used:{type:"U64",isRequired:!0},success:{type:"boolean",description:"Whether the transaction was successful",isRequired:!0},vm_status:{type:"string",description:"The VM status of the transaction, can tell useful information in a failure",isRequired:!0},accumulator_root_hash:{type:"HashValue",isRequired:!0},changes:{type:"array",contains:{type:"WriteSetChange"},isRequired:!0},timestamp:{type:"U64",isRequired:!0}}},Pi={type:"string",description:"Representation of a StateKey as a hex string. This is used for cursor based pagination.\n    "},Fi={description:"A request to submit a transaction\n\n    This requires a transaction and a signature of it",properties:{sender:{type:"Address",isRequired:!0},sequence_number:{type:"U64",isRequired:!0},max_gas_amount:{type:"U64",isRequired:!0},gas_unit_price:{type:"U64",isRequired:!0},expiration_timestamp_secs:{type:"U64",isRequired:!0},payload:{type:"TransactionPayload",isRequired:!0},signature:{type:"TransactionSignature",isRequired:!0}}},Ni={description:"Table Item request for the GetTableItem API",properties:{key_type:{type:"MoveType",isRequired:!0},value_type:{type:"MoveType",isRequired:!0},key:{description:"The value of the table item's key",properties:{},isRequired:!0}}},Di={type:"one-of",description:"Enum of the different types of transactions in Aptos",contains:[{type:"Transaction_PendingTransaction"},{type:"Transaction_UserTransaction"},{type:"Transaction_GenesisTransaction"},{type:"Transaction_BlockMetadataTransaction"},{type:"Transaction_StateCheckpointTransaction"}]},Hi={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"BlockMetadataTransaction"}]},$i={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"GenesisTransaction"}]},Oi={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"PendingTransaction"}]},Wi={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"StateCheckpointTransaction"}]},Li={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"UserTransaction"}]},Vi={type:"one-of",description:"An enum of the possible transaction payloads",contains:[{type:"TransactionPayload_EntryFunctionPayload"},{type:"TransactionPayload_ScriptPayload"},{type:"TransactionPayload_ModuleBundlePayload"}]},Gi={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"EntryFunctionPayload"}]},Ki={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"ModuleBundlePayload"}]},ji={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"ScriptPayload"}]},Ji={description:"Information telling which batch submission transactions failed",properties:{error:{type:"AptosError",isRequired:!0},transaction_index:{type:"number",description:"The index of which transaction failed, same as submission order",isRequired:!0,format:"uint64"}}},Zi={description:"Batch transaction submission result\n\n    Tells which transactions failed",properties:{transaction_failures:{type:"array",contains:{type:"TransactionsBatchSingleSubmissionFailure"},isRequired:!0}}},Xi={type:"one-of",description:"An enum representing the different transaction signatures available",contains:[{type:"TransactionSignature_Ed25519Signature"},{type:"TransactionSignature_MultiEd25519Signature"},{type:"TransactionSignature_MultiAgentSignature"}]},Qi={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"Ed25519Signature"}]},Yi={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"MultiAgentSignature"}]},er={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"MultiEd25519Signature"}]},tr={type:"string",description:"A string containing a 128-bit unsigned integer.\n\n    We represent u128 values as a string to ensure compatibility with languages such\n    as JavaScript that do not parse u64s in JSON natively.\n    ",format:"uint64"},ir={type:"string",description:"A string containing a 64-bit unsigned integer.\n\n    We represent u64 values as a string to ensure compatibility with languages such\n    as JavaScript that do not parse u64s in JSON natively.\n    ",format:"uint64"},rr={description:"A transaction submitted by a user to change the state of the blockchain",properties:{version:{type:"U64",isRequired:!0},hash:{type:"HashValue",isRequired:!0},state_change_hash:{type:"HashValue",isRequired:!0},event_root_hash:{type:"HashValue",isRequired:!0},state_checkpoint_hash:{type:"HashValue"},gas_used:{type:"U64",isRequired:!0},success:{type:"boolean",description:"Whether the transaction was successful",isRequired:!0},vm_status:{type:"string",description:"The VM status of the transaction, can tell useful information in a failure",isRequired:!0},accumulator_root_hash:{type:"HashValue",isRequired:!0},changes:{type:"array",contains:{type:"WriteSetChange"},isRequired:!0},sender:{type:"Address",isRequired:!0},sequence_number:{type:"U64",isRequired:!0},max_gas_amount:{type:"U64",isRequired:!0},gas_unit_price:{type:"U64",isRequired:!0},expiration_timestamp_secs:{type:"U64",isRequired:!0},payload:{type:"TransactionPayload",isRequired:!0},signature:{type:"TransactionSignature"},events:{type:"array",contains:{type:"Event"},isRequired:!0},timestamp:{type:"U64",isRequired:!0}}},sr={description:"An event from a transaction with a version",properties:{version:{type:"U64",isRequired:!0},guid:{type:"EventGuid",isRequired:!0},sequence_number:{type:"U64",isRequired:!0},type:{type:"MoveType",isRequired:!0},data:{description:"The JSON representation of the event",properties:{},isRequired:!0}}},nr={description:"Write a new module or update an existing one",properties:{address:{type:"Address",isRequired:!0},state_key_hash:{type:"string",description:"State key hash",isRequired:!0},data:{type:"MoveModuleBytecode",isRequired:!0}}},ar={description:"Write a resource or update an existing one",properties:{address:{type:"Address",isRequired:!0},state_key_hash:{type:"string",description:"State key hash",isRequired:!0},data:{type:"MoveResource",isRequired:!0}}},or={type:"one-of",description:"The associated writeset with a payload",contains:[{type:"WriteSet_ScriptWriteSet"},{type:"WriteSet_DirectWriteSet"}]},cr={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"DirectWriteSet"}]},ur={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"ScriptWriteSet"}]},lr={type:"one-of",description:"A final state change of a transaction on a resource or module",contains:[{type:"WriteSetChange_DeleteModule"},{type:"WriteSetChange_DeleteResource"},{type:"WriteSetChange_DeleteTableItem"},{type:"WriteSetChange_WriteModule"},{type:"WriteSetChange_WriteResource"},{type:"WriteSetChange_WriteTableItem"}]},dr={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"DeleteModule"}]},pr={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"DeleteResource"}]},hr={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"DeleteTableItem"}]},yr={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"WriteModule"}]},gr={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"WriteResource"}]},fr={type:"all-of",contains:[{properties:{type:{type:"string",isRequired:!0}}},{type:"WriteTableItem"}]},mr={description:"A writeset payload, used only for genesis",properties:{write_set:{type:"WriteSet",isRequired:!0}}},_r={description:"Change set to write a table item",properties:{state_key_hash:{type:"string",isRequired:!0},handle:{type:"HexEncodedBytes",isRequired:!0},key:{type:"HexEncodedBytes",isRequired:!0},value:{type:"HexEncodedBytes",isRequired:!0},data:{type:"DecodedTableData"}}},br=i(965);function wr(e,t,i){if(!(null==t?void 0:t.includes(typeof e)))throw new Error(i||`Invalid arg: ${e} type should be ${t instanceof Array?t.join(" or "):t}`)}function vr(e){throw new Error(e)}function Er(e){return!!e.match(/\s/)}function Tr(e){return!!e.match(/[_A-Za-z0-9]/g)}function Sr(e,t){const i=e[t];if(":"===i){if("::"===e.slice(t,t+2))return[["COLON","::"],2];vr("Unrecognized token.")}else{if("<"===i)return[["LT","<"],1];if(">"===i)return[["GT",">"],1];if(","===i)return[["COMMA",","],1];if(Er(i)){let i="";for(let r=t;r<e.length;r+=1){const t=e[r];if(!Er(t))break;i=`${i}${t}`}return[["SPACE",i],i.length]}if(Tr(i)){let i="";for(let r=t;r<e.length;r+=1){const t=e[r];if(!Tr(t))break;i=`${i}${t}`}return[["IDENT",i],i.length]}}throw new Error("Unrecognized token.")}var Ar=class{constructor(e){this.tokens=function(e){let t=0;const i=[];for(;t<e.length;){const[r,s]=Sr(e,t);"SPACE"!==r[0]&&i.push(r),t+=s}return i}(e)}consume(e){const t=this.tokens.shift();t&&t[1]===e||vr("Invalid type tag.")}parseCommaList(e,t){const i=[];for(this.tokens.length<=0&&vr("Invalid type tag.");this.tokens[0][1]!==e&&(i.push(this.parseTypeTag()),!(this.tokens.length>0&&this.tokens[0][1]===e))&&(this.consume(","),!(this.tokens.length>0&&this.tokens[0][1]===e&&t));)this.tokens.length<=0&&vr("Invalid type tag.");return i}parseTypeTag(){0===this.tokens.length&&vr("Invalid type tag.");const[e,t]=this.tokens.shift();if("u8"===t)return new _e;if("u64"===t)return new be;if("u128"===t)return new we;if("bool"===t)return new me;if("address"===t)return new ve;if("vector"===t){this.consume("<");const e=this.parseTypeTag();return this.consume(">"),new Te(e)}if("IDENT"===e&&(t.startsWith("0x")||t.startsWith("0X"))){const e=t;this.consume("::");const[i,r]=this.tokens.shift();"IDENT"!==i&&vr("Invalid type tag."),this.consume("::");const[s,n]=this.tokens.shift();"IDENT"!==s&&vr("Invalid type tag.");let a=[];this.tokens.length>0&&"<"===this.tokens[0][1]&&(this.consume("<"),a=this.parseCommaList(">",!0),this.consume(">"));const o=new Ae(ee.fromHex(e),new ge(r),new ge(n),a);return new Se(o)}throw new Error("Invalid type tag.")}};function Rr(e){if(wr(e,["boolean","string"]),"boolean"===typeof e)return e;if("true"===e)return!0;if("false"===e)return!1;throw new Error("Invalid boolean string.")}function zr(e){if(wr(e,["number","string"]),"number"===typeof e)return e;const t=Number.parseInt(e,10);if(Number.isNaN(t))throw new Error("Invalid number string.");return t}function qr(e){return wr(e,["number","bigint","string"]),BigInt(e)}function Ur(e,t,i){if(t instanceof me)i.serializeBool(Rr(e));else if(t instanceof _e)i.serializeU8(zr(e));else if(t instanceof be)i.serializeU64(qr(e));else if(t instanceof we)i.serializeU128(qr(e));else{if(!(t instanceof ve)){if(t instanceof Te){if(t.value instanceof _e){if(e instanceof Uint8Array)return void i.serializeBytes(e);if("string"===typeof e)return void i.serializeStr(e)}if(!(e instanceof Array))throw new Error("Invalid vector args.");return i.serializeU32AsUleb128(e.length),void e.forEach(e=>Ur(e,t.value,i))}if(t instanceof Se){const{address:r,module_name:s,name:n}=t.value;if("0x1::string::String"!==`${A.fromUint8Array(r.address).toShortString()}::${s.value}::${n.value}`)throw new Error("The only supported struct arg is of type 0x1::string::String");return wr(e,["string"]),void i.serializeStr(e)}throw new Error("Unsupported arg type.")}{let t;if("string"===typeof e||e instanceof A)t=ee.fromHex(e);else{if(!(e instanceof ee))throw new Error("Invalid account address.");t=e}t.serialize(i)}}}var xr,Br,Cr=class{constructor(e,t){this.rawTxnBuilder=t,this.signingFunction=e}build(e,t,i){if(!this.rawTxnBuilder)throw new Error("this.rawTxnBuilder doesn't exist.");return this.rawTxnBuilder.build(e,t,i)}static getSigningMessage(e){const t=br.sha3_256.create();if(e instanceof Re)t.update("APTOS::RawTransaction");else{if(!(e instanceof Me))throw new Error("Unknown transaction type.");t.update("APTOS::RawTransactionWithData")}const i=t.digest(),r=O(e),s=new Uint8Array(i.length+r.length);return s.set(i),s.set(r,i.length),s}},kr=class extends Cr{constructor(e,t,i){super(e,i),this.publicKey=t}rawToSigned(e){const t=Cr.getSigningMessage(e),i=this.signingFunction(t),r=new ue(new ie(this.publicKey),i);return new ke(e,r)}sign(e){return O(this.rawToSigned(e))}},Ir=class extends Cr{constructor(e,t){super(e),this.publicKey=t}rawToSigned(e){const t=Cr.getSigningMessage(e),i=this.signingFunction(t),r=new le(this.publicKey,i);return new ke(e,r)}sign(e){return O(this.rawToSigned(e))}},Mr=class{constructor(e,t){this.abiMap=new Map,e.forEach(e=>{const t=new N(e),i=Xe.deserialize(t);let r;if(i instanceof Ye){const e=i,{address:t,name:s}=e.module_name;r=`${A.fromUint8Array(t.address).toShortString()}::${s.value}::${e.name}`}else{r=i.name}if(this.abiMap.has(r))throw new Error("Found conflicting ABI interfaces");this.abiMap.set(r,i)}),this.builderConfig={maxGasAmount:BigInt(2e5),expSecFromNow:20,...t}}static toBCSArgs(e,t){if(e.length!==t.length)throw new Error("Wrong number of args provided.");return t.map((t,i)=>{const r=new P;return Ur(t,e[i].type_tag,r),r.getBytes()})}static toTransactionArguments(e,t){if(e.length!==t.length)throw new Error("Wrong number of args provided.");return t.map((t,i)=>function(e,t){if(t instanceof me)return new Ge(Rr(e));if(t instanceof _e)return new $e(zr(e));if(t instanceof be)return new Oe(qr(e));if(t instanceof we)return new We(qr(e));if(t instanceof ve){let t;if("string"===typeof e||e instanceof A)t=ee.fromHex(e);else{if(!(e instanceof ee))throw new Error("Invalid account address.");t=e}return new Le(t)}if(t instanceof Te&&t.value instanceof _e){if(!(e instanceof Uint8Array))throw new Error(e+" should be an instance of Uint8Array");return new Ve(e)}throw new Error("Unknown type for TransactionArgument.")}(t,e[i].type_tag))}setSequenceNumber(e){this.builderConfig.sequenceNumber=BigInt(e)}buildTransactionPayload(e,t,i){const r=t.map(e=>new Ar(e).parseTypeTag());let s;if(!this.abiMap.has(e))throw new Error("Cannot find function: "+e);const n=this.abiMap.get(e);if(n instanceof Ye){const e=n,t=Mr.toBCSArgs(e.args,i);s=new Ne(new qe(e.module_name,new ge(e.name),r,t))}else{if(!(n instanceof Qe))throw new Error("Unknown ABI format.");{const e=n,t=Mr.toTransactionArguments(e.args,i);s=new Fe(new ze(e.code,r,t))}}return s}build(e,t,i){const{sender:r,sequenceNumber:s,gasUnitPrice:n,maxGasAmount:a,expSecFromNow:o,chainId:c}=this.builderConfig;if(!n)throw new Error("No gasUnitPrice provided.");const u=r instanceof ee?r:ee.fromHex(r),l=BigInt(Math.floor(Date.now()/1e3)+Number(o)),d=this.buildTransactionPayload(e,t,i);if(d)return new Re(u,BigInt(s),d,BigInt(a),BigInt(n),l,new De(Number(c)));throw new Error("Invalid ABI.")}},Pr=class{constructor(e,t){this.aptosClient=e,this.builderConfig=t}async fetchABI(e){const t=(await this.aptosClient.getAccountModules(e)).map(e=>e.abi).flatMap(e=>e.exposed_functions.filter(e=>e.is_entry).map(t=>({fullName:`${e.address}::${e.name}::${t.name}`,...t}))),i=new Map;return t.forEach(e=>{i.set(e.fullName,e)}),i}async build(e,t,i){if(3!==(e=e.replace(/^0[xX]0*/g,"0x")).split("::").length)throw new Error("'func' needs to be a fully qualified function name in format <address>::<module>::<function>, e.g. 0x1::coins::transfer");const[r,s]=e.split("::"),n=await this.fetchABI(r);if(!n.has(e))throw new Error(e+" doesn't exist.");const a=n.get(e),o=a.params.filter(e=>"signer"!==e&&"&signer"!==e).map((e,t)=>new Ze("var"+t,new Ar(e).parseTypeTag())),c=new Ye(a.name,xe.fromStr(`${r}::${s}`),"",a.generic_type_params.map((e,t)=>new Je(""+t)),o),{sender:u,...l}=this.builderConfig,d=u instanceof ee?A.fromUint8Array(u.address):u,[{sequence_number:p},h,{gas_estimate:y}]=await Promise.all([(null==l?void 0:l.sequenceNumber)?Promise.resolve({sequence_number:null==l?void 0:l.sequenceNumber}):this.aptosClient.getAccount(d),(null==l?void 0:l.chainId)?Promise.resolve(null==l?void 0:l.chainId):this.aptosClient.getChainId(),(null==l?void 0:l.gasUnitPrice)?Promise.resolve({gas_estimate:null==l?void 0:l.gasUnitPrice}):this.aptosClient.estimateGasPrice()]);return new Mr([O(c)],{sender:u,sequenceNumber:p,chainId:h,gasUnitPrice:BigInt(y),...l}).build(e,t,i)}};h([(xr=6e5,q({ttlMs:xr,hashFunction:Br}))],Pr.prototype,"fetchABI",1);var Fr=class{constructor(e,t,i=!1){if(!e)throw new Error("Node URL cannot be empty.");const r=void 0===t||null===t?{}:{...t};this.nodeUrl=i?e:function(e){let t=""+e;return t.endsWith("/")&&(t=t.substring(0,t.length-1)),t.endsWith("/v1")||(t+="/v1"),t}(e),r.BASE=this.nodeUrl,!1===(null==t?void 0:t.WITH_CREDENTIALS)?r.WITH_CREDENTIALS=!1:r.WITH_CREDENTIALS=!0,this.client=new xt(r)}async getAccount(e){return this.client.accounts.getAccount(A.ensure(e).hex())}async getAccountTransactions(e,t){var i;return this.client.transactions.getAccountTransactions(A.ensure(e).hex(),null==(i=null==t?void 0:t.start)?void 0:i.toString(),null==t?void 0:t.limit)}async getAccountModules(e,t){const i=this.client.accounts.getAccountModules.bind({httpRequest:this.client.request});return await B(i,e,100,t)}async getAccountModule(e,t,i){var r;return this.client.accounts.getAccountModule(A.ensure(e).hex(),t,null==(r=null==i?void 0:i.ledgerVersion)?void 0:r.toString())}async getAccountResources(e,t){const i=this.client.accounts.getAccountResources.bind({httpRequest:this.client.request});return await B(i,e,1e3,t)}async getAccountResource(e,t,i){var r;return this.client.accounts.getAccountResource(A.ensure(e).hex(),t,null==(r=null==i?void 0:i.ledgerVersion)?void 0:r.toString())}static generateBCSTransaction(e,t){return new kr(t=>{const i=e.signBuffer(t);return new C.Ed25519Signature(i.toUint8Array())},e.pubKey().toUint8Array()).sign(t)}static generateBCSSimulation(e,t){return new kr(e=>{const t=new Uint8Array(64);return new C.Ed25519Signature(t)},e.pubKey().toUint8Array()).sign(t)}async generateTransaction(e,t,i){const r={sender:e};if((null==i?void 0:i.sequence_number)&&(r.sequenceNumber=i.sequence_number),(null==i?void 0:i.gas_unit_price)&&(r.gasUnitPrice=i.gas_unit_price),(null==i?void 0:i.max_gas_amount)&&(r.maxGasAmount=i.max_gas_amount),null==i?void 0:i.expiration_timestamp_secs){const e=Number.parseInt(i.expiration_timestamp_secs,10);r.expSecFromNow=e-Math.floor(Date.now()/1e3)}return new Pr(this,r).build(t.function,t.type_arguments,t.arguments)}async signTransaction(e,t){return Promise.resolve(Fr.generateBCSTransaction(e,t))}async getEventsByCreationNumber(e,t,i){var r;return this.client.events.getEventsByCreationNumber(A.ensure(e).hex(),t.toString(),null==(r=null==i?void 0:i.start)?void 0:r.toString(),null==i?void 0:i.limit)}async getEventsByEventHandle(e,t,i,r){var s;return this.client.events.getEventsByEventHandle(A.ensure(e).hex(),t,i,null==(s=null==r?void 0:r.start)?void 0:s.toString(),null==r?void 0:r.limit)}async submitTransaction(e){return this.submitSignedBCSTransaction(e)}async simulateTransaction(e,t,i){let r;if(e instanceof nt)r=Fr.generateBCSSimulation(e,t);else if(e instanceof ne){r=new Ir(()=>{const{threshold:t}=e,i=[],r=[];for(let e=0;e<t;e+=1)i.push(e),r.push(new C.Ed25519Signature(new Uint8Array(64)));const s=C.MultiEd25519Signature.createBitmap(i);return new C.MultiEd25519Signature(r,s)},e).sign(t)}else{r=new kr(()=>{const e=new Uint8Array(64);return new C.Ed25519Signature(e)},e.toBytes()).sign(t)}return this.submitBCSSimulation(r,i)}async submitSignedBCSTransaction(e){return this.client.request.request({url:"/transactions",method:"POST",body:e,mediaType:"application/x.aptos.signed_transaction+bcs"})}async submitBCSSimulation(e,t){var i,r,s;const n={estimate_gas_unit_price:null!=(i=null==t?void 0:t.estimateGasUnitPrice)&&i,estimate_max_gas_amount:null!=(r=null==t?void 0:t.estimateMaxGasAmount)&&r,estimate_prioritized_gas_unit_price:null!=(s=null==t?void 0:t.estimatePrioritizedGasUnitPrice)&&s};return this.client.request.request({url:"/transactions/simulate",query:n,method:"POST",body:e,mediaType:"application/x.aptos.signed_transaction+bcs"})}async getTransactions(e){var t;return this.client.transactions.getTransactions(null==(t=null==e?void 0:e.start)?void 0:t.toString(),null==e?void 0:e.limit)}async getTransactionByHash(e){return this.client.transactions.getTransactionByHash(e)}async getTransactionByVersion(e){return this.client.transactions.getTransactionByVersion(e.toString())}async transactionPending(e){try{return"pending_transaction"===(await this.client.transactions.getTransactionByHash(e)).type}catch(t){if(404===(null==t?void 0:t.status))return!0;throw t}}async waitForTransactionWithResult(e,t){var i,r;const s=null!=(i=null==t?void 0:t.timeoutSecs)?i:20,n=null!=(r=null==t?void 0:t.checkSuccess)&&r;let a,o=!0,c=0;for(;o&&!(c>=s);){try{if(a=await this.client.transactions.getTransactionByHash(e),o="pending_transaction"===a.type,!o)break}catch(u){const e=u instanceof lt,t=e&&404!==u.status&&u.status>=400&&u.status<500;if(!e||t)throw u}await R(1e3),c+=1}if(void 0===a)throw new Error(`Waiting for transaction ${e} failed`);if(o)throw new Hr(`Waiting for transaction ${e} timed out after ${s} seconds`,a);if(!n)return a;if(!(null==a?void 0:a.success))throw new $r(`Transaction ${e} committed to the blockchain but execution failed`,a);return a}async waitForTransaction(e,t){await this.waitForTransactionWithResult(e,t)}async getLedgerInfo(){return this.client.general.getLedgerInfo()}async getChainId(){return(await this.getLedgerInfo()).chain_id}async getTableItem(e,t,i){var r;return await this.client.tables.getTableItem(e,t,null==(r=null==i?void 0:i.ledgerVersion)?void 0:r.toString())}async generateRawTransaction(e,t,i){const[{sequence_number:r},s,{gas_estimate:n}]=await Promise.all([this.getAccount(e),this.getChainId(),(null==i?void 0:i.gasUnitPrice)?Promise.resolve({gas_estimate:i.gasUnitPrice}):this.estimateGasPrice()]),{maxGasAmount:a,gasUnitPrice:o,expireTimestamp:c}={maxGasAmount:BigInt(2e5),gasUnitPrice:BigInt(n),expireTimestamp:BigInt(Math.floor(Date.now()/1e3)+20),...i};return new C.RawTransaction(C.AccountAddress.fromHex(e),BigInt(r),t,a,o,c,new C.ChainId(s))}async generateSignSubmitTransaction(e,t,i){const r=await this.generateRawTransaction(e.address(),t,i),s=Fr.generateBCSTransaction(e,r);return(await this.submitSignedBCSTransaction(s)).hash}async publishPackage(e,t,i,r){const s=new P;D(i,s);const n=new C.TransactionPayloadEntryFunction(C.EntryFunction.natural("0x1::code","publish_package_txn",[],[Z(t),s.getBytes()]));return this.generateSignSubmitTransaction(e,n,r)}async generateSignSubmitWaitForTransaction(e,t,i){const r=await this.generateSignSubmitTransaction(e,t,i);return this.waitForTransactionWithResult(r,i)}async estimateGasPrice(){return this.client.transactions.estimateGasPrice()}async estimateMaxGasAmount(e){const t=`0x1::coin::CoinStore<${z}>`,[{gas_estimate:i},r]=await Promise.all([this.estimateGasPrice(),this.getAccountResources(e)]),s=r.find(e=>e.type===t);return BigInt(s.data.coin.value)/BigInt(i)}async rotateAuthKeyEd25519(e,t,i){const{sequence_number:r,authentication_key:s}=await this.getAccount(e.address()),n=new nt(t),a=new C.RotationProofChallenge(C.AccountAddress.CORE_CODE_ADDRESS,"account","RotationProofChallenge",BigInt(r),C.AccountAddress.fromHex(e.address()),new C.AccountAddress(new A(s).toUint8Array()),n.pubKey().toUint8Array()),o=A.fromUint8Array(O(a)),c=e.signHexString(o),u=n.signHexString(o),l=new C.TransactionPayloadEntryFunction(C.EntryFunction.natural("0x1::account","rotate_authentication_key",[],[L(0),Z(e.pubKey().toUint8Array()),L(0),Z(n.pubKey().toUint8Array()),Z(c.toUint8Array()),Z(u.toUint8Array())])),d=await this.generateRawTransaction(e.address(),l,i),p=Fr.generateBCSTransaction(e,d);return this.submitSignedBCSTransaction(p)}async lookupOriginalAddress(e){const t=await this.getAccountResource("0x1","0x1::account::OriginatingAddress"),{address_map:{handle:i}}=t.data,r=await this.getTableItem(i,{key_type:"address",value_type:"address",key:A.ensure(e).hex()});return new A(r)}async getBlockByHeight(e,t){return this.client.blocks.getBlockByHeight(e,t)}async getBlockByVersion(e,t){return this.client.blocks.getBlockByVersion(e,t)}clearCache(e){!function(e){const t=new Set;for(const i of e){const e=U.get(i);if(e)for(const i of e)t.has(i)||(i.clear(),t.add(i))}t.size}(e)}},Nr=Fr;h([Or],Nr.prototype,"getAccount",1),h([Or],Nr.prototype,"getAccountTransactions",1),h([Or],Nr.prototype,"getAccountModules",1),h([Or],Nr.prototype,"getAccountModule",1),h([Or],Nr.prototype,"getAccountResources",1),h([Or],Nr.prototype,"getAccountResource",1),h([Or],Nr.prototype,"getEventsByCreationNumber",1),h([Or],Nr.prototype,"getEventsByEventHandle",1),h([Or],Nr.prototype,"submitSignedBCSTransaction",1),h([Or],Nr.prototype,"submitBCSSimulation",1),h([Or],Nr.prototype,"getTransactions",1),h([Or],Nr.prototype,"getTransactionByHash",1),h([Or],Nr.prototype,"getTransactionByVersion",1),h([Or],Nr.prototype,"getLedgerInfo",1),h([q()],Nr.prototype,"getChainId",1),h([Or],Nr.prototype,"getTableItem",1),h([Or,q({ttlMs:3e5,tags:["gas_estimates"]})],Nr.prototype,"estimateGasPrice",1),h([Or],Nr.prototype,"estimateMaxGasAmount",1),h([Or],Nr.prototype,"getBlockByHeight",1),h([Or],Nr.prototype,"getBlockByVersion",1);var Dr=class extends Error{constructor(e,t,i,r){super(t),this.status=e,this.message=t,this.errorCode=i,this.vmErrorCode=r}},Hr=class extends Error{constructor(e,t){super(e),this.lastSubmittedTransaction=t}},$r=class extends Error{constructor(e,t){super(e),this.transaction=t}};function Or(e,t,i){const r=i.value;return i.value=async function(...e){var t,i;try{return await r.apply(this,[...e])}catch(s){if(s instanceof lt)throw new Dr(s.status,JSON.stringify({message:s.message,...s.body}),null==(t=s.body)?void 0:t.error_code,null==(i=s.body)?void 0:i.vm_error_code);throw s}},i}var Wrf7472616e736665725f736372697074000000000000000000000000000000000000000000000000000000000000000305746f6b656e0000051063726561746f72735f61646472657373040a636f6c6c656374696f6e07000000000000000000000000000000000000000000000000000000000000000106737472696e6706537472696e6700046e616d6507000000000000000000000000000000000000000000000000000000000000000106737472696e6706537472696e67001070726f70657274795f76657273696f6e0206616d6f756ed75746174655f746f6b656e5f70726f70657274696573000000000000000000000000000000000000000000000000000000000000000305746f6b656eba02206d75746174652074686520746f6b656e2070726f706572747920616e64207361766520746865206e65772070726f706572747920696e20546f6b656e53746f72650a2069662074686520746f6b656e2070726f70657274795f76657273696f6e20697320302c2077652077696c6c206372656174652061206e65772070726f70657274795f76657273696f6e2070657220746f6b656e20746f2067656e65726174652061206e657720746f6b656e5f69642070657220746f6b656e0a2069662074686520746f6b656e2070726f70657274795f76657273696f6e206973206e6f7420302c2077652077696c6c206a75737420757064617465207468652070726f70657274794d617020616e642075736520746865206578697374696e6720746f6b656e5f6964202870726f70657274795f76657273696f6e2900090b746f6b656e5f6f776e6572040763726561746f72040f636f6c6c656374696f6e5f6e616d6507000000000000000000000000000000000000000000000000000000000000000106737472696e6706537472696e67000a746f6b656e5f6e616d6507000000000000000000000000000000000000000000000000000000000000000106737472696e6706537472696e670016746f6b656e5f70726f70657274795f76657273696f6e0206616d6f756e7402046b6579730607000000000000000000000000000000000000000000000000000000000000000106737472696e6706537472696e67000676616c7565730606010574797065730607000000000000000000000000000000000000000000000000000000000000000106737472696e6706537472696e6700","01166f70745f696e5f6469726563745f7472616e73666572000000000000000000000000000000000000000000000000000000000000000305746f6b656e000001066f70745f696e00","01046275726e000000000000000000000000000000000000000000000000000000000000000305746f6b656e20204275726e206120746f6b656e2062792074686520746f6b656e206f776e657200051063726561746f72735f61646472657373040a636f6c6c656374696f6e07000000000000000000000000000000000000000000000000000000000000000106737472696e6706537472696e6700046e616d6507000000000000000000000000000000000000000000000000000000000000000106737472696e6706537472696e67001070726f70657274795f76657273696f6e0206616d6f756e7402","010f6275726e5f62795f63726561746f72000000000000000000000000000000000000000000000000000000000000000305746f6b656e6a204275726e206120746f6b656e2062792063726561746f72207768656e2074686520746f6b656e2773204255524e41424c455f42595f43524541544f5220697320747275650a2054686520746f6b656e206973206f776e65642061742061646472657373206f776e65720005056f776e6572040a636f6c6c656374696f6e07000000000000000000000000000000000000000000000000000000000000000106737472696e6706537472696e6700046e616d6507000000000000000000000000000000000000000000000000000000000000000106737472696e6706537472696e67001070726f70657274795f76657273696f6e0206616d6f756e7402"],Lr=["01087472616E73666572000000000000000000000000000000000000000000000000000000000000000104636F696E3C205472616E73666572732060616D6F756E7460206F6620636F696E732060436F696E54797065602066726F6D206066726F6D6020746F2060746F602E0109636F696E5F747970650202746F0406616D6F756E7402"],Vr=class{constructor(e){this.aptosClient=e,this.transactionBuilder=new Mr(Lr.map(e=>new A(e).toUint8Array()))}async transfer(e,t,i,r){var s;const n=null!=(s=null==r?void 0:r.coinType)?s:z,a=this.transactionBuilder.buildTransactionPayload("0x1::coin::transfer",[n],[t.address(),i]);return this.aptosClient.generateSignSubmitTransaction(e,a,r)}async checkBalance(e,t){var i;const r=`0x1::coin::CoinStore<${null!=(i=null==t?void 0:t.coinType)?i:z}>`,s=(await this.aptosClient.getAccountResources(e.address())).find(e=>e.type===r);return BigInt(s.data.coin.value)}},Gr=class extends Nr{constructor(e,t,i){var r,s,n;if(super(e,i),!t)throw new Error("Faucet URL cannot be empty.");this.faucetRequester=new Tt({BASE:t,VERSION:null!=(r=null==i?void 0:i.VERSION)?r:"0.1.0",WITH_CREDENTIALS:null!=(s=null==i?void 0:i.WITH_CREDENTIALS)&&s,CREDENTIALS:null!=(n=null==i?void 0:i.CREDENTIALS)?n:"include",TOKEN:null==i?void 0:i.TOKEN,USERNAME:null==i?void 0:i.USERNAME,PASSWORD:null==i?void 0:i.PASSWORD,HEADERS:null==i?void 0:i.HEADERS,ENCODE_PATH:null==i?void 0:i.ENCODE_PATH})}async fundAccount(e,t,i=20){const r=await this.faucetRequester.request({method:"POST",url:"/mint",query:{address:A.ensure(e).noPrefix(),amount:t}}),s=[];for(let n=0;n<r.length;n+=1){const e=r[n];s.push(this.waitForTransaction(e,{timeoutSecs:i}))}return await Promise.all(s),r}};function Kr(e,t){if(e.length!==t.length)throw new Error("Length of property values and types not match");const i=new Array;return t.forEach((t,r)=>{try{const s=new Ar(t).parseTypeTag(),n=new P;Ur(e[r],s,n),i.push(n.getBytes())}catch(s){i.push((new TextEncoder).encode(e[r]))}}),i}var jr=class{constructor(e){this.aptosClient=e,this.transactionBuilder=new Mr(Wr.map(e=>new A(e).toUint8Array()))}async createCollection(e,t,i,r,s=I,n){const a=this.transactionBuilder.buildTransactionPayload("0x3::token::create_collection_script",[],[t,i,r,s,[!1,!1,!1]]);return this.aptosClient.generateSignSubmitTransaction(e,a,n)}async createToken(e,t,i,r,s,n,a=I,o=e.address(),c=0,u=0,l=[],d=[],p=[],h){const y=this.transactionBuilder.buildTransactionPayload("0x3::token::create_token_script",[],[t,i,r,s,a,n,o,c,u,[!1,!1,!1,!1,!1],l,Kr(d,p),p]);return this.aptosClient.generateSignSubmitTransaction(e,y,h)}async createTokenWithMutabilityConfig(e,t,i,r,s,n,a=I,o=e.address(),c=0,u=0,l=[],d=[],p=[],h=[!1,!1,!1,!1,!1],y){const g=this.transactionBuilder.buildTransactionPayload("0x3::token::create_token_script",[],[t,i,r,s,a,n,o,c,u,h,l,d,p]);return this.aptosClient.generateSignSubmitTransaction(e,g,y)}async offerToken(e,t,i,r,s,n,a=0,o){const c=this.transactionBuilder.buildTransactionPayload("0x3::token_transfers::offer_script",[],[t,i,r,s,a,n]);return this.aptosClient.generateSignSubmitTransaction(e,c,o)}async claimToken(e,t,i,r,s,n=0,a){const o=this.transactionBuilder.buildTransactionPayload("0x3::token_transfers::claim_script",[],[t,i,r,s,n]);return this.aptosClient.generateSignSubmitTransaction(e,o,a)}async cancelTokenOffer(e,t,i,r,s,n=0,a){const o=this.transactionBuilder.buildTransactionPayload("0x3::token_transfers::cancel_offer_script",[],[t,i,r,s,n]);return this.aptosClient.generateSignSubmitTransaction(e,o,a)}async directTransferToken(e,t,i,r,s,n,a=0,o){const c=this.transactionBuilder.buildTransactionPayload("0x3::token::direct_transfer_script",[],[i,r,s,a,n]),u=await this.aptosClient.generateRawTransaction(e.address(),c,o),l=new C.MultiAgentRawTransaction(u,[C.AccountAddress.fromHex(t.address())]),d=new C.Ed25519Signature(e.signBuffer(Cr.getSigningMessage(l)).toUint8Array()),p=new C.AccountAuthenticatorEd25519(new C.Ed25519PublicKey(e.signingKey.publicKey),d),h=new C.Ed25519Signature(t.signBuffer(Cr.getSigningMessage(l)).toUint8Array()),y=new C.AccountAuthenticatorEd25519(new C.Ed25519PublicKey(t.signingKey.publicKey),h),g=new C.TransactionAuthenticatorMultiAgent(p,[C.AccountAddress.fromHex(t.address())],[y]),f=O(new C.SignedTransaction(u,g));return(await this.aptosClient.submitSignedBCSTransaction(f)).hash}async optInTokenTransfer(e,t){const i=this.transactionBuilder.buildTransactionPayload("0x3::token::opt_in_direct_transfer",[],[t]);return this.aptosClient.generateSignSubmitTransaction(e,i)}async transferWithOptIn(e,t,i,r,s,n,a){const o=new Fe(new ze(new A("a11ceb0b0500000006010004020408030c0a05161d073339086c400000010100020700010307000104030100010504020007060c0508000800030503010801000405080008000304060c0801050306737472696e6705746f6b656e06537472696e6707546f6b656e4964136372656174655f746f6b656e5f69645f726177087472616e73666572000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000030000010c0b010b020b030b0411000c070b000b070b050b06110102").toUint8Array(),[],[new Le(C.AccountAddress.fromHex(t)),new Ve((new TextEncoder).encode(i)),new Ve((new TextEncoder).encode(r)),new Oe(BigInt(s)),new Le(C.AccountAddress.fromHex(n)),new Oe(BigInt(a))]));return this.aptosClient.generateSignSubmitTransaction(e,o)}async burnByCreator(e,t,i,r,s,n){const a=this.transactionBuilder.buildTransactionPayload("0x3::token::burn_by_creator",[],[t,i,r,s,n]);return this.aptosClient.generateSignSubmitTransaction(e,a)}async burnByOwner(e,t,i,r,s,n){const a=this.transactionBuilder.buildTransactionPayload("0x3::token::burn",[],[t,i,r,s,n]);return this.aptosClient.generateSignSubmitTransaction(e,a)}async mutateTokenProperties(e,t,i,r,s,n,a,o,c,u){const l=this.transactionBuilder.buildTransactionPayload("0x3::token::mutate_token_properties",[],[t,i,r,s,n,a,o,c,u]);return this.aptosClient.generateSignSubmitTransaction(e,l)}async getCollectionData(e,t){const i=(await this.aptosClient.getAccountResources(e)).find(e=>"0x3::token::Collections"===e.type),{handle:r}=i.data.collection_data,s={key_type:"0x1::string::String",value_type:"0x3::token::CollectionData",key:t};return await this.aptosClient.getTableItem(r,s)}async getTokenData(e,t,i){const r=e instanceof A?e.hex():e,s=await this.aptosClient.getAccountResource(r,"0x3::token::Collections"),{handle:n}=s.data.token_data,a={key_type:"0x3::token::TokenDataId",value_type:"0x3::token::TokenData",key:{creator:r,collection:t,name:i}};return this.aptosClient.getTableItem(n,a)}async getToken(e,t,i,r="0"){const s={creator:e instanceof A?e.hex():e,collection:t,name:i};return this.getTokenForAccount(e,{token_data_id:s,property_version:r})}async getTokenForAccount(e,t){const i=await this.aptosClient.getAccountResource(e instanceof A?e.hex():e,"0x3::token::TokenStore"),{handle:r}=i.data.tokens,s={key_type:"0x3::token::TokenId",value_type:"0x3::token::Token",key:t};try{return await this.aptosClient.getTableItem(r,s)}catch(n){return 404===(null==n?void 0:n.status)?{id:t,amount:"0",token_properties:{}}:n}}},Jr={}}}]);